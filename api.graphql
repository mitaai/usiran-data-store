### This file was generated by Nexus Schema
### Do not make changes to this file directly


type BriefingBook {
  briefingBookDescription: String
  briefingBookTitle: String!
  createdAt: DateTime!
  id: String!
  mentionedDocuments(after: BriefingBookDocumentWhereUniqueInput, before: BriefingBookDocumentWhereUniqueInput, first: Int, last: Int): [BriefingBookDocument!]!
  mentionedEvents(after: BriefingBookEventWhereUniqueInput, before: BriefingBookEventWhereUniqueInput, first: Int, last: Int): [BriefingBookEvent!]!
  mentionedStakeholders(after: StakeholderBriefingBookWhereUniqueInput, before: StakeholderBriefingBookWhereUniqueInput, first: Int, last: Int): [StakeholderBriefingBook!]!
  updatedAt: DateTime!
}

input BriefingBookCreateOneWithoutMentionedDocumentsInput {
  connect: BriefingBookWhereUniqueInput
  connectOrCreate: BriefingBookCreateOrConnectWithoutmentionedDocumentsInput
  create: BriefingBookCreateWithoutMentionedDocumentsInput
}

input BriefingBookCreateOneWithoutMentionedEventsInput {
  connect: BriefingBookWhereUniqueInput
  connectOrCreate: BriefingBookCreateOrConnectWithoutmentionedEventsInput
  create: BriefingBookCreateWithoutMentionedEventsInput
}

input BriefingBookCreateOneWithoutMentionedStakeholdersInput {
  connect: BriefingBookWhereUniqueInput
  connectOrCreate: BriefingBookCreateOrConnectWithoutmentionedStakeholdersInput
  create: BriefingBookCreateWithoutMentionedStakeholdersInput
}

input BriefingBookCreateOrConnectWithoutmentionedDocumentsInput {
  create: BriefingBookCreateWithoutMentionedDocumentsInput!
  where: BriefingBookWhereUniqueInput!
}

input BriefingBookCreateOrConnectWithoutmentionedEventsInput {
  create: BriefingBookCreateWithoutMentionedEventsInput!
  where: BriefingBookWhereUniqueInput!
}

input BriefingBookCreateOrConnectWithoutmentionedStakeholdersInput {
  create: BriefingBookCreateWithoutMentionedStakeholdersInput!
  where: BriefingBookWhereUniqueInput!
}

input BriefingBookCreateWithoutMentionedDocumentsInput {
  briefingBookDescription: String
  briefingBookTitle: String!
  createdAt: DateTime
  id: String!
  mentionedEvents: BriefingBookEventCreateManyWithoutBriefingBookInput
  mentionedStakeholders: StakeholderBriefingBookCreateManyWithoutBriefingBookInput
  updatedAt: DateTime
}

input BriefingBookCreateWithoutMentionedEventsInput {
  briefingBookDescription: String
  briefingBookTitle: String!
  createdAt: DateTime
  id: String!
  mentionedDocuments: BriefingBookDocumentCreateManyWithoutBriefingBookInput
  mentionedStakeholders: StakeholderBriefingBookCreateManyWithoutBriefingBookInput
  updatedAt: DateTime
}

input BriefingBookCreateWithoutMentionedStakeholdersInput {
  briefingBookDescription: String
  briefingBookTitle: String!
  createdAt: DateTime
  id: String!
  mentionedDocuments: BriefingBookDocumentCreateManyWithoutBriefingBookInput
  mentionedEvents: BriefingBookEventCreateManyWithoutBriefingBookInput
  updatedAt: DateTime
}

type BriefingBookDocument {
  BriefingBook: BriefingBook!
  BriefingBookId: String!
  Document: Document!
  DocumentId: String!
  id: String!
}

input BriefingBookDocumentBriefingBookDocument_AB_uniqueCompoundUniqueInput {
  A: String!
  B: String!
}

input BriefingBookDocumentCreateManyWithoutBriefingBookInput {
  connect: [BriefingBookDocumentWhereUniqueInput!]
  connectOrCreate: [BriefingBookDocumentCreateOrConnectWithoutBriefingBookInput!]
  create: [BriefingBookDocumentCreateWithoutBriefingBookInput!]
}

input BriefingBookDocumentCreateManyWithoutDocumentInput {
  connect: [BriefingBookDocumentWhereUniqueInput!]
  connectOrCreate: [BriefingBookDocumentCreateOrConnectWithoutDocumentInput!]
  create: [BriefingBookDocumentCreateWithoutDocumentInput!]
}

input BriefingBookDocumentCreateOrConnectWithoutBriefingBookInput {
  create: BriefingBookDocumentCreateWithoutBriefingBookInput!
  where: BriefingBookDocumentWhereUniqueInput!
}

input BriefingBookDocumentCreateOrConnectWithoutDocumentInput {
  create: BriefingBookDocumentCreateWithoutDocumentInput!
  where: BriefingBookDocumentWhereUniqueInput!
}

input BriefingBookDocumentCreateWithoutBriefingBookInput {
  Document: DocumentCreateOneWithoutBriefingBooksMentionedInInput!
  id: String
}

input BriefingBookDocumentCreateWithoutDocumentInput {
  BriefingBook: BriefingBookCreateOneWithoutMentionedDocumentsInput!
  id: String
}

input BriefingBookDocumentListRelationFilter {
  every: BriefingBookDocumentWhereInput
  none: BriefingBookDocumentWhereInput
  some: BriefingBookDocumentWhereInput
}

input BriefingBookDocumentScalarWhereInput {
  A: StringFilter
  AND: [BriefingBookDocumentScalarWhereInput!]
  B: StringFilter
  id: StringFilter
  NOT: [BriefingBookDocumentScalarWhereInput!]
  OR: [BriefingBookDocumentScalarWhereInput!]
}

input BriefingBookDocumentUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
}

input BriefingBookDocumentUpdateManyWithoutBriefingBookInput {
  connect: [BriefingBookDocumentWhereUniqueInput!]
  connectOrCreate: [BriefingBookDocumentCreateOrConnectWithoutBriefingBookInput!]
  create: [BriefingBookDocumentCreateWithoutBriefingBookInput!]
  delete: [BriefingBookDocumentWhereUniqueInput!]
  deleteMany: [BriefingBookDocumentScalarWhereInput!]
  disconnect: [BriefingBookDocumentWhereUniqueInput!]
  set: [BriefingBookDocumentWhereUniqueInput!]
  update: [BriefingBookDocumentUpdateWithWhereUniqueWithoutBriefingBookInput!]
  updateMany: [BriefingBookDocumentUpdateManyWithWhereWithoutBriefingBookInput!]
  upsert: [BriefingBookDocumentUpsertWithWhereUniqueWithoutBriefingBookInput!]
}

input BriefingBookDocumentUpdateManyWithoutDocumentInput {
  connect: [BriefingBookDocumentWhereUniqueInput!]
  connectOrCreate: [BriefingBookDocumentCreateOrConnectWithoutDocumentInput!]
  create: [BriefingBookDocumentCreateWithoutDocumentInput!]
  delete: [BriefingBookDocumentWhereUniqueInput!]
  deleteMany: [BriefingBookDocumentScalarWhereInput!]
  disconnect: [BriefingBookDocumentWhereUniqueInput!]
  set: [BriefingBookDocumentWhereUniqueInput!]
  update: [BriefingBookDocumentUpdateWithWhereUniqueWithoutDocumentInput!]
  updateMany: [BriefingBookDocumentUpdateManyWithWhereWithoutDocumentInput!]
  upsert: [BriefingBookDocumentUpsertWithWhereUniqueWithoutDocumentInput!]
}

input BriefingBookDocumentUpdateManyWithWhereWithoutBriefingBookInput {
  data: BriefingBookDocumentUpdateManyMutationInput!
  where: BriefingBookDocumentScalarWhereInput!
}

input BriefingBookDocumentUpdateManyWithWhereWithoutDocumentInput {
  data: BriefingBookDocumentUpdateManyMutationInput!
  where: BriefingBookDocumentScalarWhereInput!
}

input BriefingBookDocumentUpdateWithoutBriefingBookInput {
  Document: DocumentUpdateOneRequiredWithoutBriefingBooksMentionedInInput
  id: StringFieldUpdateOperationsInput
}

input BriefingBookDocumentUpdateWithoutDocumentInput {
  BriefingBook: BriefingBookUpdateOneRequiredWithoutMentionedDocumentsInput
  id: StringFieldUpdateOperationsInput
}

input BriefingBookDocumentUpdateWithWhereUniqueWithoutBriefingBookInput {
  data: BriefingBookDocumentUpdateWithoutBriefingBookInput!
  where: BriefingBookDocumentWhereUniqueInput!
}

input BriefingBookDocumentUpdateWithWhereUniqueWithoutDocumentInput {
  data: BriefingBookDocumentUpdateWithoutDocumentInput!
  where: BriefingBookDocumentWhereUniqueInput!
}

input BriefingBookDocumentUpsertWithWhereUniqueWithoutBriefingBookInput {
  create: BriefingBookDocumentCreateWithoutBriefingBookInput!
  update: BriefingBookDocumentUpdateWithoutBriefingBookInput!
  where: BriefingBookDocumentWhereUniqueInput!
}

input BriefingBookDocumentUpsertWithWhereUniqueWithoutDocumentInput {
  create: BriefingBookDocumentCreateWithoutDocumentInput!
  update: BriefingBookDocumentUpdateWithoutDocumentInput!
  where: BriefingBookDocumentWhereUniqueInput!
}

input BriefingBookDocumentWhereInput {
  A: StringFilter
  AND: [BriefingBookDocumentWhereInput!]
  B: StringFilter
  BriefingBook: BriefingBookWhereInput
  Document: DocumentWhereInput
  id: StringFilter
  NOT: [BriefingBookDocumentWhereInput!]
  OR: [BriefingBookDocumentWhereInput!]
}

input BriefingBookDocumentWhereUniqueInput {
  BriefingBookDocument_AB_unique: BriefingBookDocumentBriefingBookDocument_AB_uniqueCompoundUniqueInput
  id: String
}

type BriefingBookEvent {
  BriefingBook: BriefingBook!
  BriefingBookId: String!
  Event: Event!
  EventId: String!
  id: String!
}

input BriefingBookEventBriefingBookEvent_AB_uniqueCompoundUniqueInput {
  A: String!
  B: String!
}

input BriefingBookEventCreateManyWithoutBriefingBookInput {
  connect: [BriefingBookEventWhereUniqueInput!]
  connectOrCreate: [BriefingBookEventCreateOrConnectWithoutBriefingBookInput!]
  create: [BriefingBookEventCreateWithoutBriefingBookInput!]
}

input BriefingBookEventCreateManyWithoutEventInput {
  connect: [BriefingBookEventWhereUniqueInput!]
  connectOrCreate: [BriefingBookEventCreateOrConnectWithoutEventInput!]
  create: [BriefingBookEventCreateWithoutEventInput!]
}

input BriefingBookEventCreateOrConnectWithoutBriefingBookInput {
  create: BriefingBookEventCreateWithoutBriefingBookInput!
  where: BriefingBookEventWhereUniqueInput!
}

input BriefingBookEventCreateOrConnectWithoutEventInput {
  create: BriefingBookEventCreateWithoutEventInput!
  where: BriefingBookEventWhereUniqueInput!
}

input BriefingBookEventCreateWithoutBriefingBookInput {
  Event: EventCreateOneWithoutBriefingBooksMentionedInInput!
  id: String
}

input BriefingBookEventCreateWithoutEventInput {
  BriefingBook: BriefingBookCreateOneWithoutMentionedEventsInput!
  id: String
}

input BriefingBookEventListRelationFilter {
  every: BriefingBookEventWhereInput
  none: BriefingBookEventWhereInput
  some: BriefingBookEventWhereInput
}

input BriefingBookEventScalarWhereInput {
  A: StringFilter
  AND: [BriefingBookEventScalarWhereInput!]
  B: StringFilter
  id: StringFilter
  NOT: [BriefingBookEventScalarWhereInput!]
  OR: [BriefingBookEventScalarWhereInput!]
}

input BriefingBookEventUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
}

input BriefingBookEventUpdateManyWithoutBriefingBookInput {
  connect: [BriefingBookEventWhereUniqueInput!]
  connectOrCreate: [BriefingBookEventCreateOrConnectWithoutBriefingBookInput!]
  create: [BriefingBookEventCreateWithoutBriefingBookInput!]
  delete: [BriefingBookEventWhereUniqueInput!]
  deleteMany: [BriefingBookEventScalarWhereInput!]
  disconnect: [BriefingBookEventWhereUniqueInput!]
  set: [BriefingBookEventWhereUniqueInput!]
  update: [BriefingBookEventUpdateWithWhereUniqueWithoutBriefingBookInput!]
  updateMany: [BriefingBookEventUpdateManyWithWhereWithoutBriefingBookInput!]
  upsert: [BriefingBookEventUpsertWithWhereUniqueWithoutBriefingBookInput!]
}

input BriefingBookEventUpdateManyWithoutEventInput {
  connect: [BriefingBookEventWhereUniqueInput!]
  connectOrCreate: [BriefingBookEventCreateOrConnectWithoutEventInput!]
  create: [BriefingBookEventCreateWithoutEventInput!]
  delete: [BriefingBookEventWhereUniqueInput!]
  deleteMany: [BriefingBookEventScalarWhereInput!]
  disconnect: [BriefingBookEventWhereUniqueInput!]
  set: [BriefingBookEventWhereUniqueInput!]
  update: [BriefingBookEventUpdateWithWhereUniqueWithoutEventInput!]
  updateMany: [BriefingBookEventUpdateManyWithWhereWithoutEventInput!]
  upsert: [BriefingBookEventUpsertWithWhereUniqueWithoutEventInput!]
}

input BriefingBookEventUpdateManyWithWhereWithoutBriefingBookInput {
  data: BriefingBookEventUpdateManyMutationInput!
  where: BriefingBookEventScalarWhereInput!
}

input BriefingBookEventUpdateManyWithWhereWithoutEventInput {
  data: BriefingBookEventUpdateManyMutationInput!
  where: BriefingBookEventScalarWhereInput!
}

input BriefingBookEventUpdateWithoutBriefingBookInput {
  Event: EventUpdateOneRequiredWithoutBriefingBooksMentionedInInput
  id: StringFieldUpdateOperationsInput
}

input BriefingBookEventUpdateWithoutEventInput {
  BriefingBook: BriefingBookUpdateOneRequiredWithoutMentionedEventsInput
  id: StringFieldUpdateOperationsInput
}

input BriefingBookEventUpdateWithWhereUniqueWithoutBriefingBookInput {
  data: BriefingBookEventUpdateWithoutBriefingBookInput!
  where: BriefingBookEventWhereUniqueInput!
}

input BriefingBookEventUpdateWithWhereUniqueWithoutEventInput {
  data: BriefingBookEventUpdateWithoutEventInput!
  where: BriefingBookEventWhereUniqueInput!
}

input BriefingBookEventUpsertWithWhereUniqueWithoutBriefingBookInput {
  create: BriefingBookEventCreateWithoutBriefingBookInput!
  update: BriefingBookEventUpdateWithoutBriefingBookInput!
  where: BriefingBookEventWhereUniqueInput!
}

input BriefingBookEventUpsertWithWhereUniqueWithoutEventInput {
  create: BriefingBookEventCreateWithoutEventInput!
  update: BriefingBookEventUpdateWithoutEventInput!
  where: BriefingBookEventWhereUniqueInput!
}

input BriefingBookEventWhereInput {
  A: StringFilter
  AND: [BriefingBookEventWhereInput!]
  B: StringFilter
  BriefingBook: BriefingBookWhereInput
  Event: EventWhereInput
  id: StringFilter
  NOT: [BriefingBookEventWhereInput!]
  OR: [BriefingBookEventWhereInput!]
}

input BriefingBookEventWhereUniqueInput {
  BriefingBookEvent_AB_unique: BriefingBookEventBriefingBookEvent_AB_uniqueCompoundUniqueInput
  id: String
}

input BriefingBookOrderByInput {
  briefingBookDescription: SortOrder
  briefingBookTitle: SortOrder
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
}

input BriefingBookUpdateOneRequiredWithoutMentionedDocumentsInput {
  connect: BriefingBookWhereUniqueInput
  connectOrCreate: BriefingBookCreateOrConnectWithoutmentionedDocumentsInput
  create: BriefingBookCreateWithoutMentionedDocumentsInput
  update: BriefingBookUpdateWithoutMentionedDocumentsInput
  upsert: BriefingBookUpsertWithoutMentionedDocumentsInput
}

input BriefingBookUpdateOneRequiredWithoutMentionedEventsInput {
  connect: BriefingBookWhereUniqueInput
  connectOrCreate: BriefingBookCreateOrConnectWithoutmentionedEventsInput
  create: BriefingBookCreateWithoutMentionedEventsInput
  update: BriefingBookUpdateWithoutMentionedEventsInput
  upsert: BriefingBookUpsertWithoutMentionedEventsInput
}

input BriefingBookUpdateOneRequiredWithoutMentionedStakeholdersInput {
  connect: BriefingBookWhereUniqueInput
  connectOrCreate: BriefingBookCreateOrConnectWithoutmentionedStakeholdersInput
  create: BriefingBookCreateWithoutMentionedStakeholdersInput
  update: BriefingBookUpdateWithoutMentionedStakeholdersInput
  upsert: BriefingBookUpsertWithoutMentionedStakeholdersInput
}

input BriefingBookUpdateWithoutMentionedDocumentsInput {
  briefingBookDescription: NullableStringFieldUpdateOperationsInput
  briefingBookTitle: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  mentionedEvents: BriefingBookEventUpdateManyWithoutBriefingBookInput
  mentionedStakeholders: StakeholderBriefingBookUpdateManyWithoutBriefingBookInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input BriefingBookUpdateWithoutMentionedEventsInput {
  briefingBookDescription: NullableStringFieldUpdateOperationsInput
  briefingBookTitle: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  mentionedDocuments: BriefingBookDocumentUpdateManyWithoutBriefingBookInput
  mentionedStakeholders: StakeholderBriefingBookUpdateManyWithoutBriefingBookInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input BriefingBookUpdateWithoutMentionedStakeholdersInput {
  briefingBookDescription: NullableStringFieldUpdateOperationsInput
  briefingBookTitle: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  mentionedDocuments: BriefingBookDocumentUpdateManyWithoutBriefingBookInput
  mentionedEvents: BriefingBookEventUpdateManyWithoutBriefingBookInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input BriefingBookUpsertWithoutMentionedDocumentsInput {
  create: BriefingBookCreateWithoutMentionedDocumentsInput!
  update: BriefingBookUpdateWithoutMentionedDocumentsInput!
}

input BriefingBookUpsertWithoutMentionedEventsInput {
  create: BriefingBookCreateWithoutMentionedEventsInput!
  update: BriefingBookUpdateWithoutMentionedEventsInput!
}

input BriefingBookUpsertWithoutMentionedStakeholdersInput {
  create: BriefingBookCreateWithoutMentionedStakeholdersInput!
  update: BriefingBookUpdateWithoutMentionedStakeholdersInput!
}

input BriefingBookWhereInput {
  AND: [BriefingBookWhereInput!]
  briefingBookDescription: StringNullableFilter
  briefingBookTitle: StringFilter
  createdAt: DateTimeFilter
  id: StringFilter
  mentionedDocuments: BriefingBookDocumentListRelationFilter
  mentionedEvents: BriefingBookEventListRelationFilter
  mentionedStakeholders: StakeholderBriefingBookListRelationFilter
  NOT: [BriefingBookWhereInput!]
  OR: [BriefingBookWhereInput!]
  updatedAt: DateTimeFilter
}

input BriefingBookWhereUniqueInput {
  briefingBookTitle: String
  id: String
}

type Classification {
  createdAt: DateTime!
  documentsWithClassification(after: ClassificationOnDocumentWhereUniqueInput, before: ClassificationOnDocumentWhereUniqueInput, first: Int, last: Int): [ClassificationOnDocument!]!
  id: String!
  name: String!
  updatedAt: DateTime!
}

input ClassificationCreateOneWithoutDocumentsWithClassificationInput {
  connect: ClassificationWhereUniqueInput
  connectOrCreate: ClassificationCreateOrConnectWithoutdocumentsWithClassificationInput
  create: ClassificationCreateWithoutDocumentsWithClassificationInput
}

input ClassificationCreateOrConnectWithoutdocumentsWithClassificationInput {
  create: ClassificationCreateWithoutDocumentsWithClassificationInput!
  where: ClassificationWhereUniqueInput!
}

input ClassificationCreateWithoutDocumentsWithClassificationInput {
  createdAt: DateTime
  id: String!
  name: String!
  updatedAt: DateTime
}

type ClassificationOnDocument {
  Classification: Classification!
  ClassificationId: String!
  Document: Document!
  DocumentId: String!
  id: String!
}

input ClassificationOnDocumentClassificationOnDocument_AB_uniqueCompoundUniqueInput {
  A: String!
  B: String!
}

input ClassificationOnDocumentCreateInput {
  Classification: ClassificationCreateOneWithoutDocumentsWithClassificationInput!
  Document: DocumentCreateOneWithoutDocumentClassificationInput!
  id: String
}

input ClassificationOnDocumentCreateManyWithoutDocumentInput {
  connect: [ClassificationOnDocumentWhereUniqueInput!]
  connectOrCreate: [ClassificationOnDocumentCreateOrConnectWithoutDocumentInput!]
  create: [ClassificationOnDocumentCreateWithoutDocumentInput!]
}

input ClassificationOnDocumentCreateOrConnectWithoutDocumentInput {
  create: ClassificationOnDocumentCreateWithoutDocumentInput!
  where: ClassificationOnDocumentWhereUniqueInput!
}

input ClassificationOnDocumentCreateWithoutDocumentInput {
  Classification: ClassificationCreateOneWithoutDocumentsWithClassificationInput!
  id: String
}

input ClassificationOnDocumentListRelationFilter {
  every: ClassificationOnDocumentWhereInput
  none: ClassificationOnDocumentWhereInput
  some: ClassificationOnDocumentWhereInput
}

input ClassificationOnDocumentScalarWhereInput {
  A: StringFilter
  AND: [ClassificationOnDocumentScalarWhereInput!]
  B: StringFilter
  id: StringFilter
  NOT: [ClassificationOnDocumentScalarWhereInput!]
  OR: [ClassificationOnDocumentScalarWhereInput!]
}

input ClassificationOnDocumentUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
}

input ClassificationOnDocumentUpdateManyWithoutDocumentInput {
  connect: [ClassificationOnDocumentWhereUniqueInput!]
  connectOrCreate: [ClassificationOnDocumentCreateOrConnectWithoutDocumentInput!]
  create: [ClassificationOnDocumentCreateWithoutDocumentInput!]
  delete: [ClassificationOnDocumentWhereUniqueInput!]
  deleteMany: [ClassificationOnDocumentScalarWhereInput!]
  disconnect: [ClassificationOnDocumentWhereUniqueInput!]
  set: [ClassificationOnDocumentWhereUniqueInput!]
  update: [ClassificationOnDocumentUpdateWithWhereUniqueWithoutDocumentInput!]
  updateMany: [ClassificationOnDocumentUpdateManyWithWhereWithoutDocumentInput!]
  upsert: [ClassificationOnDocumentUpsertWithWhereUniqueWithoutDocumentInput!]
}

input ClassificationOnDocumentUpdateManyWithWhereWithoutDocumentInput {
  data: ClassificationOnDocumentUpdateManyMutationInput!
  where: ClassificationOnDocumentScalarWhereInput!
}

input ClassificationOnDocumentUpdateWithoutDocumentInput {
  Classification: ClassificationUpdateOneRequiredWithoutDocumentsWithClassificationInput
  id: StringFieldUpdateOperationsInput
}

input ClassificationOnDocumentUpdateWithWhereUniqueWithoutDocumentInput {
  data: ClassificationOnDocumentUpdateWithoutDocumentInput!
  where: ClassificationOnDocumentWhereUniqueInput!
}

input ClassificationOnDocumentUpsertWithWhereUniqueWithoutDocumentInput {
  create: ClassificationOnDocumentCreateWithoutDocumentInput!
  update: ClassificationOnDocumentUpdateWithoutDocumentInput!
  where: ClassificationOnDocumentWhereUniqueInput!
}

input ClassificationOnDocumentWhereInput {
  A: StringFilter
  AND: [ClassificationOnDocumentWhereInput!]
  B: StringFilter
  Classification: ClassificationWhereInput
  Document: DocumentWhereInput
  id: StringFilter
  NOT: [ClassificationOnDocumentWhereInput!]
  OR: [ClassificationOnDocumentWhereInput!]
}

input ClassificationOnDocumentWhereUniqueInput {
  ClassificationOnDocument_AB_unique: ClassificationOnDocumentClassificationOnDocument_AB_uniqueCompoundUniqueInput
  id: String
}

input ClassificationUpdateOneRequiredWithoutDocumentsWithClassificationInput {
  connect: ClassificationWhereUniqueInput
  connectOrCreate: ClassificationCreateOrConnectWithoutdocumentsWithClassificationInput
  create: ClassificationCreateWithoutDocumentsWithClassificationInput
  update: ClassificationUpdateWithoutDocumentsWithClassificationInput
  upsert: ClassificationUpsertWithoutDocumentsWithClassificationInput
}

input ClassificationUpdateWithoutDocumentsWithClassificationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ClassificationUpsertWithoutDocumentsWithClassificationInput {
  create: ClassificationCreateWithoutDocumentsWithClassificationInput!
  update: ClassificationUpdateWithoutDocumentsWithClassificationInput!
}

input ClassificationWhereInput {
  AND: [ClassificationWhereInput!]
  createdAt: DateTimeFilter
  documentsWithClassification: ClassificationOnDocumentListRelationFilter
  id: StringFilter
  name: StringFilter
  NOT: [ClassificationWhereInput!]
  OR: [ClassificationWhereInput!]
  updatedAt: DateTimeFilter
}

input ClassificationWhereUniqueInput {
  id: String
  name: String
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

input DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input DateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime!]
}

type Document {
  dnsaAbstract: String
  dnsaCitation: String
  dnsaCollection: String
  dnsaFrom: String
  dnsaItemNumber: String
  dnsaOrigin: String
  dnsaStakeholder: String
  dnsaSubject: String
  dnsaTo: String
  dnsaURL: String
  documentAuthors(after: DocumentAuthorWhereUniqueInput, before: DocumentAuthorWhereUniqueInput, first: Int, last: Int): [DocumentAuthor!]!
  documentClassification(after: ClassificationOnDocumentWhereUniqueInput, before: ClassificationOnDocumentWhereUniqueInput, first: Int, last: Int): [ClassificationOnDocument!]!
  documentCreationDate: DateTime
  documentDescription: String
  documentFiles(after: DocumentFileWhereUniqueInput, before: DocumentFileWhereUniqueInput, first: Int, last: Int): [DocumentFile!]!
  documentKind(after: KindOnDocumentWhereUniqueInput, before: KindOnDocumentWhereUniqueInput, first: Int, last: Int): [KindOnDocument!]!
  documentOriginalID: String!
  documentPublicationDate: DateTime
  documentTags(after: TagOnDocumentWhereUniqueInput, before: TagOnDocumentWhereUniqueInput, first: Int, last: Int): [TagOnDocument!]!
  documentTitle: String!
  documentTranscript: String
  id: String!
  mentionedLocations(after: DocumentLocationWhereUniqueInput, before: DocumentLocationWhereUniqueInput, first: Int, last: Int): [DocumentLocation!]!
  mentionedStakeholders(after: DocumentInvolvedStakeholderWhereUniqueInput, before: DocumentInvolvedStakeholderWhereUniqueInput, first: Int, last: Int): [DocumentInvolvedStakeholder!]!
}

type DocumentAuthor {
  Document: Document!
  DocumentId: String!
  id: String!
  Stakeholder: Stakeholder!
  StakeholderId: String!
}

input DocumentAuthorCreateInput {
  Document: DocumentCreateOneWithoutDocumentAuthorsInput!
  id: String
  Stakeholder: StakeholderCreateOneWithoutDocumentsInput!
}

input DocumentAuthorCreateManyWithoutDocumentInput {
  connect: [DocumentAuthorWhereUniqueInput!]
  connectOrCreate: [DocumentAuthorCreateOrConnectWithoutDocumentInput!]
  create: [DocumentAuthorCreateWithoutDocumentInput!]
}

input DocumentAuthorCreateManyWithoutStakeholderInput {
  connect: [DocumentAuthorWhereUniqueInput!]
  connectOrCreate: [DocumentAuthorCreateOrConnectWithoutStakeholderInput!]
  create: [DocumentAuthorCreateWithoutStakeholderInput!]
}

input DocumentAuthorCreateOrConnectWithoutDocumentInput {
  create: DocumentAuthorCreateWithoutDocumentInput!
  where: DocumentAuthorWhereUniqueInput!
}

input DocumentAuthorCreateOrConnectWithoutStakeholderInput {
  create: DocumentAuthorCreateWithoutStakeholderInput!
  where: DocumentAuthorWhereUniqueInput!
}

input DocumentAuthorCreateWithoutDocumentInput {
  id: String
  Stakeholder: StakeholderCreateOneWithoutDocumentsInput!
}

input DocumentAuthorCreateWithoutStakeholderInput {
  Document: DocumentCreateOneWithoutDocumentAuthorsInput!
  id: String
}

input DocumentAuthorDocumentAuthor_AB_uniqueCompoundUniqueInput {
  A: String!
  B: String!
}

input DocumentAuthorListRelationFilter {
  every: DocumentAuthorWhereInput
  none: DocumentAuthorWhereInput
  some: DocumentAuthorWhereInput
}

input DocumentAuthorScalarWhereInput {
  A: StringFilter
  AND: [DocumentAuthorScalarWhereInput!]
  B: StringFilter
  id: StringFilter
  NOT: [DocumentAuthorScalarWhereInput!]
  OR: [DocumentAuthorScalarWhereInput!]
}

input DocumentAuthorUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
}

input DocumentAuthorUpdateManyWithoutDocumentInput {
  connect: [DocumentAuthorWhereUniqueInput!]
  connectOrCreate: [DocumentAuthorCreateOrConnectWithoutDocumentInput!]
  create: [DocumentAuthorCreateWithoutDocumentInput!]
  delete: [DocumentAuthorWhereUniqueInput!]
  deleteMany: [DocumentAuthorScalarWhereInput!]
  disconnect: [DocumentAuthorWhereUniqueInput!]
  set: [DocumentAuthorWhereUniqueInput!]
  update: [DocumentAuthorUpdateWithWhereUniqueWithoutDocumentInput!]
  updateMany: [DocumentAuthorUpdateManyWithWhereWithoutDocumentInput!]
  upsert: [DocumentAuthorUpsertWithWhereUniqueWithoutDocumentInput!]
}

input DocumentAuthorUpdateManyWithoutStakeholderInput {
  connect: [DocumentAuthorWhereUniqueInput!]
  connectOrCreate: [DocumentAuthorCreateOrConnectWithoutStakeholderInput!]
  create: [DocumentAuthorCreateWithoutStakeholderInput!]
  delete: [DocumentAuthorWhereUniqueInput!]
  deleteMany: [DocumentAuthorScalarWhereInput!]
  disconnect: [DocumentAuthorWhereUniqueInput!]
  set: [DocumentAuthorWhereUniqueInput!]
  update: [DocumentAuthorUpdateWithWhereUniqueWithoutStakeholderInput!]
  updateMany: [DocumentAuthorUpdateManyWithWhereWithoutStakeholderInput!]
  upsert: [DocumentAuthorUpsertWithWhereUniqueWithoutStakeholderInput!]
}

input DocumentAuthorUpdateManyWithWhereWithoutDocumentInput {
  data: DocumentAuthorUpdateManyMutationInput!
  where: DocumentAuthorScalarWhereInput!
}

input DocumentAuthorUpdateManyWithWhereWithoutStakeholderInput {
  data: DocumentAuthorUpdateManyMutationInput!
  where: DocumentAuthorScalarWhereInput!
}

input DocumentAuthorUpdateWithoutDocumentInput {
  id: StringFieldUpdateOperationsInput
  Stakeholder: StakeholderUpdateOneRequiredWithoutDocumentsInput
}

input DocumentAuthorUpdateWithoutStakeholderInput {
  Document: DocumentUpdateOneRequiredWithoutDocumentAuthorsInput
  id: StringFieldUpdateOperationsInput
}

input DocumentAuthorUpdateWithWhereUniqueWithoutDocumentInput {
  data: DocumentAuthorUpdateWithoutDocumentInput!
  where: DocumentAuthorWhereUniqueInput!
}

input DocumentAuthorUpdateWithWhereUniqueWithoutStakeholderInput {
  data: DocumentAuthorUpdateWithoutStakeholderInput!
  where: DocumentAuthorWhereUniqueInput!
}

input DocumentAuthorUpsertWithWhereUniqueWithoutDocumentInput {
  create: DocumentAuthorCreateWithoutDocumentInput!
  update: DocumentAuthorUpdateWithoutDocumentInput!
  where: DocumentAuthorWhereUniqueInput!
}

input DocumentAuthorUpsertWithWhereUniqueWithoutStakeholderInput {
  create: DocumentAuthorCreateWithoutStakeholderInput!
  update: DocumentAuthorUpdateWithoutStakeholderInput!
  where: DocumentAuthorWhereUniqueInput!
}

input DocumentAuthorWhereInput {
  A: StringFilter
  AND: [DocumentAuthorWhereInput!]
  B: StringFilter
  Document: DocumentWhereInput
  id: StringFilter
  NOT: [DocumentAuthorWhereInput!]
  OR: [DocumentAuthorWhereInput!]
  Stakeholder: StakeholderWhereInput
}

input DocumentAuthorWhereUniqueInput {
  DocumentAuthor_AB_unique: DocumentAuthorDocumentAuthor_AB_uniqueCompoundUniqueInput
  id: String
}

input DocumentCreateInput {
  briefingBooksMentionedIn: BriefingBookDocumentCreateManyWithoutDocumentInput
  createdAt: DateTime
  dnsaAbstract: String
  dnsaCitation: String
  dnsaCollection: String
  dnsaFrom: String
  dnsaItemNumber: String
  dnsaOrigin: String
  dnsaStakeholder: String
  dnsaSubject: String
  dnsaTo: String
  dnsaURL: String
  documentAuthors: DocumentAuthorCreateManyWithoutDocumentInput
  documentClassification: ClassificationOnDocumentCreateManyWithoutDocumentInput
  documentCreationDate: DateTime
  documentDescription: String
  documentFiles: DocumentFileCreateManyWithoutDocumentInput
  documentKind: KindOnDocumentCreateManyWithoutDocumentInput
  documentMediaType: String
  documentOriginalID: String!
  documentPublicationDate: DateTime
  documentTags: TagOnDocumentCreateManyWithoutDocumentInput
  documentTitle: String!
  documentTranscript: String
  documentTsVector: String
  id: String!
  mentionedEvents: DocumentEventCreateManyWithoutDocumentInput
  mentionedLocations: DocumentLocationCreateManyWithoutDocumentInput
  mentionedStakeholders: DocumentInvolvedStakeholderCreateManyWithoutDocumentInput
  sessionNumber: Int
  updatedAt: DateTime
}

input DocumentCreateOneWithoutBriefingBooksMentionedInInput {
  connect: DocumentWhereUniqueInput
  connectOrCreate: DocumentCreateOrConnectWithoutbriefingBooksMentionedInInput
  create: DocumentCreateWithoutBriefingBooksMentionedInInput
}

input DocumentCreateOneWithoutDocumentAuthorsInput {
  connect: DocumentWhereUniqueInput
  connectOrCreate: DocumentCreateOrConnectWithoutdocumentAuthorsInput
  create: DocumentCreateWithoutDocumentAuthorsInput
}

input DocumentCreateOneWithoutDocumentClassificationInput {
  connect: DocumentWhereUniqueInput
  connectOrCreate: DocumentCreateOrConnectWithoutdocumentClassificationInput
  create: DocumentCreateWithoutDocumentClassificationInput
}

input DocumentCreateOneWithoutDocumentFilesInput {
  connect: DocumentWhereUniqueInput
  connectOrCreate: DocumentCreateOrConnectWithoutdocumentFilesInput
  create: DocumentCreateWithoutDocumentFilesInput
}

input DocumentCreateOneWithoutDocumentKindInput {
  connect: DocumentWhereUniqueInput
  connectOrCreate: DocumentCreateOrConnectWithoutdocumentKindInput
  create: DocumentCreateWithoutDocumentKindInput
}

input DocumentCreateOneWithoutDocumentTagsInput {
  connect: DocumentWhereUniqueInput
  connectOrCreate: DocumentCreateOrConnectWithoutdocumentTagsInput
  create: DocumentCreateWithoutDocumentTagsInput
}

input DocumentCreateOneWithoutMentionedEventsInput {
  connect: DocumentWhereUniqueInput
  connectOrCreate: DocumentCreateOrConnectWithoutmentionedEventsInput
  create: DocumentCreateWithoutMentionedEventsInput
}

input DocumentCreateOneWithoutMentionedLocationsInput {
  connect: DocumentWhereUniqueInput
  connectOrCreate: DocumentCreateOrConnectWithoutmentionedLocationsInput
  create: DocumentCreateWithoutMentionedLocationsInput
}

input DocumentCreateOneWithoutMentionedStakeholdersInput {
  connect: DocumentWhereUniqueInput
  connectOrCreate: DocumentCreateOrConnectWithoutmentionedStakeholdersInput
  create: DocumentCreateWithoutMentionedStakeholdersInput
}

input DocumentCreateOrConnectWithoutbriefingBooksMentionedInInput {
  create: DocumentCreateWithoutBriefingBooksMentionedInInput!
  where: DocumentWhereUniqueInput!
}

input DocumentCreateOrConnectWithoutdocumentAuthorsInput {
  create: DocumentCreateWithoutDocumentAuthorsInput!
  where: DocumentWhereUniqueInput!
}

input DocumentCreateOrConnectWithoutdocumentClassificationInput {
  create: DocumentCreateWithoutDocumentClassificationInput!
  where: DocumentWhereUniqueInput!
}

input DocumentCreateOrConnectWithoutdocumentFilesInput {
  create: DocumentCreateWithoutDocumentFilesInput!
  where: DocumentWhereUniqueInput!
}

input DocumentCreateOrConnectWithoutdocumentKindInput {
  create: DocumentCreateWithoutDocumentKindInput!
  where: DocumentWhereUniqueInput!
}

input DocumentCreateOrConnectWithoutdocumentTagsInput {
  create: DocumentCreateWithoutDocumentTagsInput!
  where: DocumentWhereUniqueInput!
}

input DocumentCreateOrConnectWithoutmentionedEventsInput {
  create: DocumentCreateWithoutMentionedEventsInput!
  where: DocumentWhereUniqueInput!
}

input DocumentCreateOrConnectWithoutmentionedLocationsInput {
  create: DocumentCreateWithoutMentionedLocationsInput!
  where: DocumentWhereUniqueInput!
}

input DocumentCreateOrConnectWithoutmentionedStakeholdersInput {
  create: DocumentCreateWithoutMentionedStakeholdersInput!
  where: DocumentWhereUniqueInput!
}

input DocumentCreateWithoutBriefingBooksMentionedInInput {
  createdAt: DateTime
  dnsaAbstract: String
  dnsaCitation: String
  dnsaCollection: String
  dnsaFrom: String
  dnsaItemNumber: String
  dnsaOrigin: String
  dnsaStakeholder: String
  dnsaSubject: String
  dnsaTo: String
  dnsaURL: String
  documentAuthors: DocumentAuthorCreateManyWithoutDocumentInput
  documentClassification: ClassificationOnDocumentCreateManyWithoutDocumentInput
  documentCreationDate: DateTime
  documentDescription: String
  documentFiles: DocumentFileCreateManyWithoutDocumentInput
  documentKind: KindOnDocumentCreateManyWithoutDocumentInput
  documentMediaType: String
  documentOriginalID: String!
  documentPublicationDate: DateTime
  documentTags: TagOnDocumentCreateManyWithoutDocumentInput
  documentTitle: String!
  documentTranscript: String
  documentTsVector: String
  id: String!
  mentionedEvents: DocumentEventCreateManyWithoutDocumentInput
  mentionedLocations: DocumentLocationCreateManyWithoutDocumentInput
  mentionedStakeholders: DocumentInvolvedStakeholderCreateManyWithoutDocumentInput
  sessionNumber: Int
  updatedAt: DateTime
}

input DocumentCreateWithoutDocumentAuthorsInput {
  briefingBooksMentionedIn: BriefingBookDocumentCreateManyWithoutDocumentInput
  createdAt: DateTime
  dnsaAbstract: String
  dnsaCitation: String
  dnsaCollection: String
  dnsaFrom: String
  dnsaItemNumber: String
  dnsaOrigin: String
  dnsaStakeholder: String
  dnsaSubject: String
  dnsaTo: String
  dnsaURL: String
  documentClassification: ClassificationOnDocumentCreateManyWithoutDocumentInput
  documentCreationDate: DateTime
  documentDescription: String
  documentFiles: DocumentFileCreateManyWithoutDocumentInput
  documentKind: KindOnDocumentCreateManyWithoutDocumentInput
  documentMediaType: String
  documentOriginalID: String!
  documentPublicationDate: DateTime
  documentTags: TagOnDocumentCreateManyWithoutDocumentInput
  documentTitle: String!
  documentTranscript: String
  documentTsVector: String
  id: String!
  mentionedEvents: DocumentEventCreateManyWithoutDocumentInput
  mentionedLocations: DocumentLocationCreateManyWithoutDocumentInput
  mentionedStakeholders: DocumentInvolvedStakeholderCreateManyWithoutDocumentInput
  sessionNumber: Int
  updatedAt: DateTime
}

input DocumentCreateWithoutDocumentClassificationInput {
  briefingBooksMentionedIn: BriefingBookDocumentCreateManyWithoutDocumentInput
  createdAt: DateTime
  dnsaAbstract: String
  dnsaCitation: String
  dnsaCollection: String
  dnsaFrom: String
  dnsaItemNumber: String
  dnsaOrigin: String
  dnsaStakeholder: String
  dnsaSubject: String
  dnsaTo: String
  dnsaURL: String
  documentAuthors: DocumentAuthorCreateManyWithoutDocumentInput
  documentCreationDate: DateTime
  documentDescription: String
  documentFiles: DocumentFileCreateManyWithoutDocumentInput
  documentKind: KindOnDocumentCreateManyWithoutDocumentInput
  documentMediaType: String
  documentOriginalID: String!
  documentPublicationDate: DateTime
  documentTags: TagOnDocumentCreateManyWithoutDocumentInput
  documentTitle: String!
  documentTranscript: String
  documentTsVector: String
  id: String!
  mentionedEvents: DocumentEventCreateManyWithoutDocumentInput
  mentionedLocations: DocumentLocationCreateManyWithoutDocumentInput
  mentionedStakeholders: DocumentInvolvedStakeholderCreateManyWithoutDocumentInput
  sessionNumber: Int
  updatedAt: DateTime
}

input DocumentCreateWithoutDocumentFilesInput {
  briefingBooksMentionedIn: BriefingBookDocumentCreateManyWithoutDocumentInput
  createdAt: DateTime
  dnsaAbstract: String
  dnsaCitation: String
  dnsaCollection: String
  dnsaFrom: String
  dnsaItemNumber: String
  dnsaOrigin: String
  dnsaStakeholder: String
  dnsaSubject: String
  dnsaTo: String
  dnsaURL: String
  documentAuthors: DocumentAuthorCreateManyWithoutDocumentInput
  documentClassification: ClassificationOnDocumentCreateManyWithoutDocumentInput
  documentCreationDate: DateTime
  documentDescription: String
  documentKind: KindOnDocumentCreateManyWithoutDocumentInput
  documentMediaType: String
  documentOriginalID: String!
  documentPublicationDate: DateTime
  documentTags: TagOnDocumentCreateManyWithoutDocumentInput
  documentTitle: String!
  documentTranscript: String
  documentTsVector: String
  id: String!
  mentionedEvents: DocumentEventCreateManyWithoutDocumentInput
  mentionedLocations: DocumentLocationCreateManyWithoutDocumentInput
  mentionedStakeholders: DocumentInvolvedStakeholderCreateManyWithoutDocumentInput
  sessionNumber: Int
  updatedAt: DateTime
}

input DocumentCreateWithoutDocumentKindInput {
  briefingBooksMentionedIn: BriefingBookDocumentCreateManyWithoutDocumentInput
  createdAt: DateTime
  dnsaAbstract: String
  dnsaCitation: String
  dnsaCollection: String
  dnsaFrom: String
  dnsaItemNumber: String
  dnsaOrigin: String
  dnsaStakeholder: String
  dnsaSubject: String
  dnsaTo: String
  dnsaURL: String
  documentAuthors: DocumentAuthorCreateManyWithoutDocumentInput
  documentClassification: ClassificationOnDocumentCreateManyWithoutDocumentInput
  documentCreationDate: DateTime
  documentDescription: String
  documentFiles: DocumentFileCreateManyWithoutDocumentInput
  documentMediaType: String
  documentOriginalID: String!
  documentPublicationDate: DateTime
  documentTags: TagOnDocumentCreateManyWithoutDocumentInput
  documentTitle: String!
  documentTranscript: String
  documentTsVector: String
  id: String!
  mentionedEvents: DocumentEventCreateManyWithoutDocumentInput
  mentionedLocations: DocumentLocationCreateManyWithoutDocumentInput
  mentionedStakeholders: DocumentInvolvedStakeholderCreateManyWithoutDocumentInput
  sessionNumber: Int
  updatedAt: DateTime
}

input DocumentCreateWithoutDocumentTagsInput {
  briefingBooksMentionedIn: BriefingBookDocumentCreateManyWithoutDocumentInput
  createdAt: DateTime
  dnsaAbstract: String
  dnsaCitation: String
  dnsaCollection: String
  dnsaFrom: String
  dnsaItemNumber: String
  dnsaOrigin: String
  dnsaStakeholder: String
  dnsaSubject: String
  dnsaTo: String
  dnsaURL: String
  documentAuthors: DocumentAuthorCreateManyWithoutDocumentInput
  documentClassification: ClassificationOnDocumentCreateManyWithoutDocumentInput
  documentCreationDate: DateTime
  documentDescription: String
  documentFiles: DocumentFileCreateManyWithoutDocumentInput
  documentKind: KindOnDocumentCreateManyWithoutDocumentInput
  documentMediaType: String
  documentOriginalID: String!
  documentPublicationDate: DateTime
  documentTitle: String!
  documentTranscript: String
  documentTsVector: String
  id: String!
  mentionedEvents: DocumentEventCreateManyWithoutDocumentInput
  mentionedLocations: DocumentLocationCreateManyWithoutDocumentInput
  mentionedStakeholders: DocumentInvolvedStakeholderCreateManyWithoutDocumentInput
  sessionNumber: Int
  updatedAt: DateTime
}

input DocumentCreateWithoutMentionedEventsInput {
  briefingBooksMentionedIn: BriefingBookDocumentCreateManyWithoutDocumentInput
  createdAt: DateTime
  dnsaAbstract: String
  dnsaCitation: String
  dnsaCollection: String
  dnsaFrom: String
  dnsaItemNumber: String
  dnsaOrigin: String
  dnsaStakeholder: String
  dnsaSubject: String
  dnsaTo: String
  dnsaURL: String
  documentAuthors: DocumentAuthorCreateManyWithoutDocumentInput
  documentClassification: ClassificationOnDocumentCreateManyWithoutDocumentInput
  documentCreationDate: DateTime
  documentDescription: String
  documentFiles: DocumentFileCreateManyWithoutDocumentInput
  documentKind: KindOnDocumentCreateManyWithoutDocumentInput
  documentMediaType: String
  documentOriginalID: String!
  documentPublicationDate: DateTime
  documentTags: TagOnDocumentCreateManyWithoutDocumentInput
  documentTitle: String!
  documentTranscript: String
  documentTsVector: String
  id: String!
  mentionedLocations: DocumentLocationCreateManyWithoutDocumentInput
  mentionedStakeholders: DocumentInvolvedStakeholderCreateManyWithoutDocumentInput
  sessionNumber: Int
  updatedAt: DateTime
}

input DocumentCreateWithoutMentionedLocationsInput {
  briefingBooksMentionedIn: BriefingBookDocumentCreateManyWithoutDocumentInput
  createdAt: DateTime
  dnsaAbstract: String
  dnsaCitation: String
  dnsaCollection: String
  dnsaFrom: String
  dnsaItemNumber: String
  dnsaOrigin: String
  dnsaStakeholder: String
  dnsaSubject: String
  dnsaTo: String
  dnsaURL: String
  documentAuthors: DocumentAuthorCreateManyWithoutDocumentInput
  documentClassification: ClassificationOnDocumentCreateManyWithoutDocumentInput
  documentCreationDate: DateTime
  documentDescription: String
  documentFiles: DocumentFileCreateManyWithoutDocumentInput
  documentKind: KindOnDocumentCreateManyWithoutDocumentInput
  documentMediaType: String
  documentOriginalID: String!
  documentPublicationDate: DateTime
  documentTags: TagOnDocumentCreateManyWithoutDocumentInput
  documentTitle: String!
  documentTranscript: String
  documentTsVector: String
  id: String!
  mentionedEvents: DocumentEventCreateManyWithoutDocumentInput
  mentionedStakeholders: DocumentInvolvedStakeholderCreateManyWithoutDocumentInput
  sessionNumber: Int
  updatedAt: DateTime
}

input DocumentCreateWithoutMentionedStakeholdersInput {
  briefingBooksMentionedIn: BriefingBookDocumentCreateManyWithoutDocumentInput
  createdAt: DateTime
  dnsaAbstract: String
  dnsaCitation: String
  dnsaCollection: String
  dnsaFrom: String
  dnsaItemNumber: String
  dnsaOrigin: String
  dnsaStakeholder: String
  dnsaSubject: String
  dnsaTo: String
  dnsaURL: String
  documentAuthors: DocumentAuthorCreateManyWithoutDocumentInput
  documentClassification: ClassificationOnDocumentCreateManyWithoutDocumentInput
  documentCreationDate: DateTime
  documentDescription: String
  documentFiles: DocumentFileCreateManyWithoutDocumentInput
  documentKind: KindOnDocumentCreateManyWithoutDocumentInput
  documentMediaType: String
  documentOriginalID: String!
  documentPublicationDate: DateTime
  documentTags: TagOnDocumentCreateManyWithoutDocumentInput
  documentTitle: String!
  documentTranscript: String
  documentTsVector: String
  id: String!
  mentionedEvents: DocumentEventCreateManyWithoutDocumentInput
  mentionedLocations: DocumentLocationCreateManyWithoutDocumentInput
  sessionNumber: Int
  updatedAt: DateTime
}

type DocumentEvent {
  Document: Document!
  DocumentId: String!
  Event: Event!
  EventId: String!
  id: String!
}

input DocumentEventCreateInput {
  Document: DocumentCreateOneWithoutMentionedEventsInput!
  Event: EventCreateOneWithoutDocumentsMentionedInInput!
  id: String
}

input DocumentEventCreateManyWithoutDocumentInput {
  connect: [DocumentEventWhereUniqueInput!]
  connectOrCreate: [DocumentEventCreateOrConnectWithoutDocumentInput!]
  create: [DocumentEventCreateWithoutDocumentInput!]
}

input DocumentEventCreateManyWithoutEventInput {
  connect: [DocumentEventWhereUniqueInput!]
  connectOrCreate: [DocumentEventCreateOrConnectWithoutEventInput!]
  create: [DocumentEventCreateWithoutEventInput!]
}

input DocumentEventCreateOrConnectWithoutDocumentInput {
  create: DocumentEventCreateWithoutDocumentInput!
  where: DocumentEventWhereUniqueInput!
}

input DocumentEventCreateOrConnectWithoutEventInput {
  create: DocumentEventCreateWithoutEventInput!
  where: DocumentEventWhereUniqueInput!
}

input DocumentEventCreateWithoutDocumentInput {
  Event: EventCreateOneWithoutDocumentsMentionedInInput!
  id: String
}

input DocumentEventCreateWithoutEventInput {
  Document: DocumentCreateOneWithoutMentionedEventsInput!
  id: String
}

input DocumentEventDocumentEvent_AB_uniqueCompoundUniqueInput {
  A: String!
  B: String!
}

input DocumentEventListRelationFilter {
  every: DocumentEventWhereInput
  none: DocumentEventWhereInput
  some: DocumentEventWhereInput
}

input DocumentEventScalarWhereInput {
  A: StringFilter
  AND: [DocumentEventScalarWhereInput!]
  B: StringFilter
  id: StringFilter
  NOT: [DocumentEventScalarWhereInput!]
  OR: [DocumentEventScalarWhereInput!]
}

input DocumentEventUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
}

input DocumentEventUpdateManyWithoutDocumentInput {
  connect: [DocumentEventWhereUniqueInput!]
  connectOrCreate: [DocumentEventCreateOrConnectWithoutDocumentInput!]
  create: [DocumentEventCreateWithoutDocumentInput!]
  delete: [DocumentEventWhereUniqueInput!]
  deleteMany: [DocumentEventScalarWhereInput!]
  disconnect: [DocumentEventWhereUniqueInput!]
  set: [DocumentEventWhereUniqueInput!]
  update: [DocumentEventUpdateWithWhereUniqueWithoutDocumentInput!]
  updateMany: [DocumentEventUpdateManyWithWhereWithoutDocumentInput!]
  upsert: [DocumentEventUpsertWithWhereUniqueWithoutDocumentInput!]
}

input DocumentEventUpdateManyWithoutEventInput {
  connect: [DocumentEventWhereUniqueInput!]
  connectOrCreate: [DocumentEventCreateOrConnectWithoutEventInput!]
  create: [DocumentEventCreateWithoutEventInput!]
  delete: [DocumentEventWhereUniqueInput!]
  deleteMany: [DocumentEventScalarWhereInput!]
  disconnect: [DocumentEventWhereUniqueInput!]
  set: [DocumentEventWhereUniqueInput!]
  update: [DocumentEventUpdateWithWhereUniqueWithoutEventInput!]
  updateMany: [DocumentEventUpdateManyWithWhereWithoutEventInput!]
  upsert: [DocumentEventUpsertWithWhereUniqueWithoutEventInput!]
}

input DocumentEventUpdateManyWithWhereWithoutDocumentInput {
  data: DocumentEventUpdateManyMutationInput!
  where: DocumentEventScalarWhereInput!
}

input DocumentEventUpdateManyWithWhereWithoutEventInput {
  data: DocumentEventUpdateManyMutationInput!
  where: DocumentEventScalarWhereInput!
}

input DocumentEventUpdateWithoutDocumentInput {
  Event: EventUpdateOneRequiredWithoutDocumentsMentionedInInput
  id: StringFieldUpdateOperationsInput
}

input DocumentEventUpdateWithoutEventInput {
  Document: DocumentUpdateOneRequiredWithoutMentionedEventsInput
  id: StringFieldUpdateOperationsInput
}

input DocumentEventUpdateWithWhereUniqueWithoutDocumentInput {
  data: DocumentEventUpdateWithoutDocumentInput!
  where: DocumentEventWhereUniqueInput!
}

input DocumentEventUpdateWithWhereUniqueWithoutEventInput {
  data: DocumentEventUpdateWithoutEventInput!
  where: DocumentEventWhereUniqueInput!
}

input DocumentEventUpsertWithWhereUniqueWithoutDocumentInput {
  create: DocumentEventCreateWithoutDocumentInput!
  update: DocumentEventUpdateWithoutDocumentInput!
  where: DocumentEventWhereUniqueInput!
}

input DocumentEventUpsertWithWhereUniqueWithoutEventInput {
  create: DocumentEventCreateWithoutEventInput!
  update: DocumentEventUpdateWithoutEventInput!
  where: DocumentEventWhereUniqueInput!
}

input DocumentEventWhereInput {
  A: StringFilter
  AND: [DocumentEventWhereInput!]
  B: StringFilter
  Document: DocumentWhereInput
  Event: EventWhereInput
  id: StringFilter
  NOT: [DocumentEventWhereInput!]
  OR: [DocumentEventWhereInput!]
}

input DocumentEventWhereUniqueInput {
  DocumentEvent_AB_unique: DocumentEventDocumentEvent_AB_uniqueCompoundUniqueInput
  id: String
}

type DocumentFile {
  Document: Document!
  DocumentId: String!
  File: File!
  FileId: String!
  id: String!
}

input DocumentFileCreateInput {
  Document: DocumentCreateOneWithoutDocumentFilesInput!
  File: FileCreateOneWithoutDocumentsIncludedInInput!
  id: String
}

input DocumentFileCreateManyWithoutDocumentInput {
  connect: [DocumentFileWhereUniqueInput!]
  connectOrCreate: [DocumentFileCreateOrConnectWithoutDocumentInput!]
  create: [DocumentFileCreateWithoutDocumentInput!]
}

input DocumentFileCreateManyWithoutFileInput {
  connect: [DocumentFileWhereUniqueInput!]
  connectOrCreate: [DocumentFileCreateOrConnectWithoutFileInput!]
  create: [DocumentFileCreateWithoutFileInput!]
}

input DocumentFileCreateOrConnectWithoutDocumentInput {
  create: DocumentFileCreateWithoutDocumentInput!
  where: DocumentFileWhereUniqueInput!
}

input DocumentFileCreateOrConnectWithoutFileInput {
  create: DocumentFileCreateWithoutFileInput!
  where: DocumentFileWhereUniqueInput!
}

input DocumentFileCreateWithoutDocumentInput {
  File: FileCreateOneWithoutDocumentsIncludedInInput!
  id: String
}

input DocumentFileCreateWithoutFileInput {
  Document: DocumentCreateOneWithoutDocumentFilesInput!
  id: String
}

input DocumentFileDocumentFile_AB_uniqueCompoundUniqueInput {
  A: String!
  B: String!
}

input DocumentFileListRelationFilter {
  every: DocumentFileWhereInput
  none: DocumentFileWhereInput
  some: DocumentFileWhereInput
}

input DocumentFileScalarWhereInput {
  A: StringFilter
  AND: [DocumentFileScalarWhereInput!]
  B: StringFilter
  id: StringFilter
  NOT: [DocumentFileScalarWhereInput!]
  OR: [DocumentFileScalarWhereInput!]
}

input DocumentFileUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
}

input DocumentFileUpdateManyWithoutDocumentInput {
  connect: [DocumentFileWhereUniqueInput!]
  connectOrCreate: [DocumentFileCreateOrConnectWithoutDocumentInput!]
  create: [DocumentFileCreateWithoutDocumentInput!]
  delete: [DocumentFileWhereUniqueInput!]
  deleteMany: [DocumentFileScalarWhereInput!]
  disconnect: [DocumentFileWhereUniqueInput!]
  set: [DocumentFileWhereUniqueInput!]
  update: [DocumentFileUpdateWithWhereUniqueWithoutDocumentInput!]
  updateMany: [DocumentFileUpdateManyWithWhereWithoutDocumentInput!]
  upsert: [DocumentFileUpsertWithWhereUniqueWithoutDocumentInput!]
}

input DocumentFileUpdateManyWithWhereWithoutDocumentInput {
  data: DocumentFileUpdateManyMutationInput!
  where: DocumentFileScalarWhereInput!
}

input DocumentFileUpdateWithoutDocumentInput {
  File: FileUpdateOneRequiredWithoutDocumentsIncludedInInput
  id: StringFieldUpdateOperationsInput
}

input DocumentFileUpdateWithWhereUniqueWithoutDocumentInput {
  data: DocumentFileUpdateWithoutDocumentInput!
  where: DocumentFileWhereUniqueInput!
}

input DocumentFileUpsertWithWhereUniqueWithoutDocumentInput {
  create: DocumentFileCreateWithoutDocumentInput!
  update: DocumentFileUpdateWithoutDocumentInput!
  where: DocumentFileWhereUniqueInput!
}

input DocumentFileWhereInput {
  A: StringFilter
  AND: [DocumentFileWhereInput!]
  B: StringFilter
  Document: DocumentWhereInput
  File: FileWhereInput
  id: StringFilter
  NOT: [DocumentFileWhereInput!]
  OR: [DocumentFileWhereInput!]
}

input DocumentFileWhereUniqueInput {
  DocumentFile_AB_unique: DocumentFileDocumentFile_AB_uniqueCompoundUniqueInput
  id: String
}

type DocumentInvolvedStakeholder {
  Document: Document!
  DocumentId: String!
  id: String!
  Stakeholder: Stakeholder!
  StakeholderId: String!
}

input DocumentInvolvedStakeholderCreateInput {
  Document: DocumentCreateOneWithoutMentionedStakeholdersInput!
  id: String
  Stakeholder: StakeholderCreateOneWithoutDocumentsMentionedInInput!
}

input DocumentInvolvedStakeholderCreateManyWithoutDocumentInput {
  connect: [DocumentInvolvedStakeholderWhereUniqueInput!]
  connectOrCreate: [DocumentInvolvedStakeholderCreateOrConnectWithoutDocumentInput!]
  create: [DocumentInvolvedStakeholderCreateWithoutDocumentInput!]
}

input DocumentInvolvedStakeholderCreateManyWithoutStakeholderInput {
  connect: [DocumentInvolvedStakeholderWhereUniqueInput!]
  connectOrCreate: [DocumentInvolvedStakeholderCreateOrConnectWithoutStakeholderInput!]
  create: [DocumentInvolvedStakeholderCreateWithoutStakeholderInput!]
}

input DocumentInvolvedStakeholderCreateOrConnectWithoutDocumentInput {
  create: DocumentInvolvedStakeholderCreateWithoutDocumentInput!
  where: DocumentInvolvedStakeholderWhereUniqueInput!
}

input DocumentInvolvedStakeholderCreateOrConnectWithoutStakeholderInput {
  create: DocumentInvolvedStakeholderCreateWithoutStakeholderInput!
  where: DocumentInvolvedStakeholderWhereUniqueInput!
}

input DocumentInvolvedStakeholderCreateWithoutDocumentInput {
  id: String
  Stakeholder: StakeholderCreateOneWithoutDocumentsMentionedInInput!
}

input DocumentInvolvedStakeholderCreateWithoutStakeholderInput {
  Document: DocumentCreateOneWithoutMentionedStakeholdersInput!
  id: String
}

input DocumentInvolvedStakeholderDocumentInvolvedStakeholder_AB_uniqueCompoundUniqueInput {
  A: String!
  B: String!
}

input DocumentInvolvedStakeholderListRelationFilter {
  every: DocumentInvolvedStakeholderWhereInput
  none: DocumentInvolvedStakeholderWhereInput
  some: DocumentInvolvedStakeholderWhereInput
}

input DocumentInvolvedStakeholderScalarWhereInput {
  A: StringFilter
  AND: [DocumentInvolvedStakeholderScalarWhereInput!]
  B: StringFilter
  id: StringFilter
  NOT: [DocumentInvolvedStakeholderScalarWhereInput!]
  OR: [DocumentInvolvedStakeholderScalarWhereInput!]
}

input DocumentInvolvedStakeholderUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
}

input DocumentInvolvedStakeholderUpdateManyWithoutDocumentInput {
  connect: [DocumentInvolvedStakeholderWhereUniqueInput!]
  connectOrCreate: [DocumentInvolvedStakeholderCreateOrConnectWithoutDocumentInput!]
  create: [DocumentInvolvedStakeholderCreateWithoutDocumentInput!]
  delete: [DocumentInvolvedStakeholderWhereUniqueInput!]
  deleteMany: [DocumentInvolvedStakeholderScalarWhereInput!]
  disconnect: [DocumentInvolvedStakeholderWhereUniqueInput!]
  set: [DocumentInvolvedStakeholderWhereUniqueInput!]
  update: [DocumentInvolvedStakeholderUpdateWithWhereUniqueWithoutDocumentInput!]
  updateMany: [DocumentInvolvedStakeholderUpdateManyWithWhereWithoutDocumentInput!]
  upsert: [DocumentInvolvedStakeholderUpsertWithWhereUniqueWithoutDocumentInput!]
}

input DocumentInvolvedStakeholderUpdateManyWithoutStakeholderInput {
  connect: [DocumentInvolvedStakeholderWhereUniqueInput!]
  connectOrCreate: [DocumentInvolvedStakeholderCreateOrConnectWithoutStakeholderInput!]
  create: [DocumentInvolvedStakeholderCreateWithoutStakeholderInput!]
  delete: [DocumentInvolvedStakeholderWhereUniqueInput!]
  deleteMany: [DocumentInvolvedStakeholderScalarWhereInput!]
  disconnect: [DocumentInvolvedStakeholderWhereUniqueInput!]
  set: [DocumentInvolvedStakeholderWhereUniqueInput!]
  update: [DocumentInvolvedStakeholderUpdateWithWhereUniqueWithoutStakeholderInput!]
  updateMany: [DocumentInvolvedStakeholderUpdateManyWithWhereWithoutStakeholderInput!]
  upsert: [DocumentInvolvedStakeholderUpsertWithWhereUniqueWithoutStakeholderInput!]
}

input DocumentInvolvedStakeholderUpdateManyWithWhereWithoutDocumentInput {
  data: DocumentInvolvedStakeholderUpdateManyMutationInput!
  where: DocumentInvolvedStakeholderScalarWhereInput!
}

input DocumentInvolvedStakeholderUpdateManyWithWhereWithoutStakeholderInput {
  data: DocumentInvolvedStakeholderUpdateManyMutationInput!
  where: DocumentInvolvedStakeholderScalarWhereInput!
}

input DocumentInvolvedStakeholderUpdateWithoutDocumentInput {
  id: StringFieldUpdateOperationsInput
  Stakeholder: StakeholderUpdateOneRequiredWithoutDocumentsMentionedInInput
}

input DocumentInvolvedStakeholderUpdateWithoutStakeholderInput {
  Document: DocumentUpdateOneRequiredWithoutMentionedStakeholdersInput
  id: StringFieldUpdateOperationsInput
}

input DocumentInvolvedStakeholderUpdateWithWhereUniqueWithoutDocumentInput {
  data: DocumentInvolvedStakeholderUpdateWithoutDocumentInput!
  where: DocumentInvolvedStakeholderWhereUniqueInput!
}

input DocumentInvolvedStakeholderUpdateWithWhereUniqueWithoutStakeholderInput {
  data: DocumentInvolvedStakeholderUpdateWithoutStakeholderInput!
  where: DocumentInvolvedStakeholderWhereUniqueInput!
}

input DocumentInvolvedStakeholderUpsertWithWhereUniqueWithoutDocumentInput {
  create: DocumentInvolvedStakeholderCreateWithoutDocumentInput!
  update: DocumentInvolvedStakeholderUpdateWithoutDocumentInput!
  where: DocumentInvolvedStakeholderWhereUniqueInput!
}

input DocumentInvolvedStakeholderUpsertWithWhereUniqueWithoutStakeholderInput {
  create: DocumentInvolvedStakeholderCreateWithoutStakeholderInput!
  update: DocumentInvolvedStakeholderUpdateWithoutStakeholderInput!
  where: DocumentInvolvedStakeholderWhereUniqueInput!
}

input DocumentInvolvedStakeholderWhereInput {
  A: StringFilter
  AND: [DocumentInvolvedStakeholderWhereInput!]
  B: StringFilter
  Document: DocumentWhereInput
  id: StringFilter
  NOT: [DocumentInvolvedStakeholderWhereInput!]
  OR: [DocumentInvolvedStakeholderWhereInput!]
  Stakeholder: StakeholderWhereInput
}

input DocumentInvolvedStakeholderWhereUniqueInput {
  DocumentInvolvedStakeholder_AB_unique: DocumentInvolvedStakeholderDocumentInvolvedStakeholder_AB_uniqueCompoundUniqueInput
  id: String
}

type DocumentLocation {
  Document: Document!
  DocumentId: String!
  id: String!
  Location: Location!
  LocationId: String!
}

input DocumentLocationCreateInput {
  Document: DocumentCreateOneWithoutMentionedLocationsInput!
  id: String
  Location: LocationCreateOneWithoutDocumentsMentionedInInput!
}

input DocumentLocationCreateManyWithoutDocumentInput {
  connect: [DocumentLocationWhereUniqueInput!]
  connectOrCreate: [DocumentLocationCreateOrConnectWithoutDocumentInput!]
  create: [DocumentLocationCreateWithoutDocumentInput!]
}

input DocumentLocationCreateManyWithoutLocationInput {
  connect: [DocumentLocationWhereUniqueInput!]
  connectOrCreate: [DocumentLocationCreateOrConnectWithoutLocationInput!]
  create: [DocumentLocationCreateWithoutLocationInput!]
}

input DocumentLocationCreateOrConnectWithoutDocumentInput {
  create: DocumentLocationCreateWithoutDocumentInput!
  where: DocumentLocationWhereUniqueInput!
}

input DocumentLocationCreateOrConnectWithoutLocationInput {
  create: DocumentLocationCreateWithoutLocationInput!
  where: DocumentLocationWhereUniqueInput!
}

input DocumentLocationCreateWithoutDocumentInput {
  id: String
  Location: LocationCreateOneWithoutDocumentsMentionedInInput!
}

input DocumentLocationCreateWithoutLocationInput {
  Document: DocumentCreateOneWithoutMentionedLocationsInput!
  id: String
}

input DocumentLocationDocumentLocation_AB_uniqueCompoundUniqueInput {
  A: String!
  B: String!
}

input DocumentLocationListRelationFilter {
  every: DocumentLocationWhereInput
  none: DocumentLocationWhereInput
  some: DocumentLocationWhereInput
}

input DocumentLocationScalarWhereInput {
  A: StringFilter
  AND: [DocumentLocationScalarWhereInput!]
  B: StringFilter
  id: StringFilter
  NOT: [DocumentLocationScalarWhereInput!]
  OR: [DocumentLocationScalarWhereInput!]
}

input DocumentLocationUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
}

input DocumentLocationUpdateManyWithoutDocumentInput {
  connect: [DocumentLocationWhereUniqueInput!]
  connectOrCreate: [DocumentLocationCreateOrConnectWithoutDocumentInput!]
  create: [DocumentLocationCreateWithoutDocumentInput!]
  delete: [DocumentLocationWhereUniqueInput!]
  deleteMany: [DocumentLocationScalarWhereInput!]
  disconnect: [DocumentLocationWhereUniqueInput!]
  set: [DocumentLocationWhereUniqueInput!]
  update: [DocumentLocationUpdateWithWhereUniqueWithoutDocumentInput!]
  updateMany: [DocumentLocationUpdateManyWithWhereWithoutDocumentInput!]
  upsert: [DocumentLocationUpsertWithWhereUniqueWithoutDocumentInput!]
}

input DocumentLocationUpdateManyWithoutLocationInput {
  connect: [DocumentLocationWhereUniqueInput!]
  connectOrCreate: [DocumentLocationCreateOrConnectWithoutLocationInput!]
  create: [DocumentLocationCreateWithoutLocationInput!]
  delete: [DocumentLocationWhereUniqueInput!]
  deleteMany: [DocumentLocationScalarWhereInput!]
  disconnect: [DocumentLocationWhereUniqueInput!]
  set: [DocumentLocationWhereUniqueInput!]
  update: [DocumentLocationUpdateWithWhereUniqueWithoutLocationInput!]
  updateMany: [DocumentLocationUpdateManyWithWhereWithoutLocationInput!]
  upsert: [DocumentLocationUpsertWithWhereUniqueWithoutLocationInput!]
}

input DocumentLocationUpdateManyWithWhereWithoutDocumentInput {
  data: DocumentLocationUpdateManyMutationInput!
  where: DocumentLocationScalarWhereInput!
}

input DocumentLocationUpdateManyWithWhereWithoutLocationInput {
  data: DocumentLocationUpdateManyMutationInput!
  where: DocumentLocationScalarWhereInput!
}

input DocumentLocationUpdateWithoutDocumentInput {
  id: StringFieldUpdateOperationsInput
  Location: LocationUpdateOneRequiredWithoutDocumentsMentionedInInput
}

input DocumentLocationUpdateWithoutLocationInput {
  Document: DocumentUpdateOneRequiredWithoutMentionedLocationsInput
  id: StringFieldUpdateOperationsInput
}

input DocumentLocationUpdateWithWhereUniqueWithoutDocumentInput {
  data: DocumentLocationUpdateWithoutDocumentInput!
  where: DocumentLocationWhereUniqueInput!
}

input DocumentLocationUpdateWithWhereUniqueWithoutLocationInput {
  data: DocumentLocationUpdateWithoutLocationInput!
  where: DocumentLocationWhereUniqueInput!
}

input DocumentLocationUpsertWithWhereUniqueWithoutDocumentInput {
  create: DocumentLocationCreateWithoutDocumentInput!
  update: DocumentLocationUpdateWithoutDocumentInput!
  where: DocumentLocationWhereUniqueInput!
}

input DocumentLocationUpsertWithWhereUniqueWithoutLocationInput {
  create: DocumentLocationCreateWithoutLocationInput!
  update: DocumentLocationUpdateWithoutLocationInput!
  where: DocumentLocationWhereUniqueInput!
}

input DocumentLocationWhereInput {
  A: StringFilter
  AND: [DocumentLocationWhereInput!]
  B: StringFilter
  Document: DocumentWhereInput
  id: StringFilter
  Location: LocationWhereInput
  NOT: [DocumentLocationWhereInput!]
  OR: [DocumentLocationWhereInput!]
}

input DocumentLocationWhereUniqueInput {
  DocumentLocation_AB_unique: DocumentLocationDocumentLocation_AB_uniqueCompoundUniqueInput
  id: String
}

input DocumentOrderByInput {
  createdAt: SortOrder
  dnsaAbstract: SortOrder
  dnsaCitation: SortOrder
  dnsaCollection: SortOrder
  dnsaFrom: SortOrder
  dnsaItemNumber: SortOrder
  dnsaOrigin: SortOrder
  dnsaStakeholder: SortOrder
  dnsaSubject: SortOrder
  dnsaTo: SortOrder
  dnsaURL: SortOrder
  documentCreationDate: SortOrder
  documentDescription: SortOrder
  documentMediaType: SortOrder
  documentOriginalID: SortOrder
  documentPublicationDate: SortOrder
  documentTitle: SortOrder
  documentTranscript: SortOrder
  documentTsVector: SortOrder
  id: SortOrder
  sessionNumber: SortOrder
  updatedAt: SortOrder
}

input DocumentUpdateInput {
  briefingBooksMentionedIn: BriefingBookDocumentUpdateManyWithoutDocumentInput
  createdAt: DateTimeFieldUpdateOperationsInput
  dnsaAbstract: NullableStringFieldUpdateOperationsInput
  dnsaCitation: NullableStringFieldUpdateOperationsInput
  dnsaCollection: NullableStringFieldUpdateOperationsInput
  dnsaFrom: NullableStringFieldUpdateOperationsInput
  dnsaItemNumber: NullableStringFieldUpdateOperationsInput
  dnsaOrigin: NullableStringFieldUpdateOperationsInput
  dnsaStakeholder: NullableStringFieldUpdateOperationsInput
  dnsaSubject: NullableStringFieldUpdateOperationsInput
  dnsaTo: NullableStringFieldUpdateOperationsInput
  dnsaURL: NullableStringFieldUpdateOperationsInput
  documentAuthors: DocumentAuthorUpdateManyWithoutDocumentInput
  documentClassification: ClassificationOnDocumentUpdateManyWithoutDocumentInput
  documentCreationDate: NullableDateTimeFieldUpdateOperationsInput
  documentDescription: NullableStringFieldUpdateOperationsInput
  documentFiles: DocumentFileUpdateManyWithoutDocumentInput
  documentKind: KindOnDocumentUpdateManyWithoutDocumentInput
  documentMediaType: StringFieldUpdateOperationsInput
  documentOriginalID: StringFieldUpdateOperationsInput
  documentPublicationDate: NullableDateTimeFieldUpdateOperationsInput
  documentTags: TagOnDocumentUpdateManyWithoutDocumentInput
  documentTitle: StringFieldUpdateOperationsInput
  documentTranscript: NullableStringFieldUpdateOperationsInput
  documentTsVector: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  mentionedEvents: DocumentEventUpdateManyWithoutDocumentInput
  mentionedLocations: DocumentLocationUpdateManyWithoutDocumentInput
  mentionedStakeholders: DocumentInvolvedStakeholderUpdateManyWithoutDocumentInput
  sessionNumber: NullableIntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input DocumentUpdateOneRequiredWithoutBriefingBooksMentionedInInput {
  connect: DocumentWhereUniqueInput
  connectOrCreate: DocumentCreateOrConnectWithoutbriefingBooksMentionedInInput
  create: DocumentCreateWithoutBriefingBooksMentionedInInput
  update: DocumentUpdateWithoutBriefingBooksMentionedInInput
  upsert: DocumentUpsertWithoutBriefingBooksMentionedInInput
}

input DocumentUpdateOneRequiredWithoutDocumentAuthorsInput {
  connect: DocumentWhereUniqueInput
  connectOrCreate: DocumentCreateOrConnectWithoutdocumentAuthorsInput
  create: DocumentCreateWithoutDocumentAuthorsInput
  update: DocumentUpdateWithoutDocumentAuthorsInput
  upsert: DocumentUpsertWithoutDocumentAuthorsInput
}

input DocumentUpdateOneRequiredWithoutDocumentTagsInput {
  connect: DocumentWhereUniqueInput
  connectOrCreate: DocumentCreateOrConnectWithoutdocumentTagsInput
  create: DocumentCreateWithoutDocumentTagsInput
  update: DocumentUpdateWithoutDocumentTagsInput
  upsert: DocumentUpsertWithoutDocumentTagsInput
}

input DocumentUpdateOneRequiredWithoutMentionedEventsInput {
  connect: DocumentWhereUniqueInput
  connectOrCreate: DocumentCreateOrConnectWithoutmentionedEventsInput
  create: DocumentCreateWithoutMentionedEventsInput
  update: DocumentUpdateWithoutMentionedEventsInput
  upsert: DocumentUpsertWithoutMentionedEventsInput
}

input DocumentUpdateOneRequiredWithoutMentionedLocationsInput {
  connect: DocumentWhereUniqueInput
  connectOrCreate: DocumentCreateOrConnectWithoutmentionedLocationsInput
  create: DocumentCreateWithoutMentionedLocationsInput
  update: DocumentUpdateWithoutMentionedLocationsInput
  upsert: DocumentUpsertWithoutMentionedLocationsInput
}

input DocumentUpdateOneRequiredWithoutMentionedStakeholdersInput {
  connect: DocumentWhereUniqueInput
  connectOrCreate: DocumentCreateOrConnectWithoutmentionedStakeholdersInput
  create: DocumentCreateWithoutMentionedStakeholdersInput
  update: DocumentUpdateWithoutMentionedStakeholdersInput
  upsert: DocumentUpsertWithoutMentionedStakeholdersInput
}

input DocumentUpdateWithoutBriefingBooksMentionedInInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  dnsaAbstract: NullableStringFieldUpdateOperationsInput
  dnsaCitation: NullableStringFieldUpdateOperationsInput
  dnsaCollection: NullableStringFieldUpdateOperationsInput
  dnsaFrom: NullableStringFieldUpdateOperationsInput
  dnsaItemNumber: NullableStringFieldUpdateOperationsInput
  dnsaOrigin: NullableStringFieldUpdateOperationsInput
  dnsaStakeholder: NullableStringFieldUpdateOperationsInput
  dnsaSubject: NullableStringFieldUpdateOperationsInput
  dnsaTo: NullableStringFieldUpdateOperationsInput
  dnsaURL: NullableStringFieldUpdateOperationsInput
  documentAuthors: DocumentAuthorUpdateManyWithoutDocumentInput
  documentClassification: ClassificationOnDocumentUpdateManyWithoutDocumentInput
  documentCreationDate: NullableDateTimeFieldUpdateOperationsInput
  documentDescription: NullableStringFieldUpdateOperationsInput
  documentFiles: DocumentFileUpdateManyWithoutDocumentInput
  documentKind: KindOnDocumentUpdateManyWithoutDocumentInput
  documentMediaType: StringFieldUpdateOperationsInput
  documentOriginalID: StringFieldUpdateOperationsInput
  documentPublicationDate: NullableDateTimeFieldUpdateOperationsInput
  documentTags: TagOnDocumentUpdateManyWithoutDocumentInput
  documentTitle: StringFieldUpdateOperationsInput
  documentTranscript: NullableStringFieldUpdateOperationsInput
  documentTsVector: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  mentionedEvents: DocumentEventUpdateManyWithoutDocumentInput
  mentionedLocations: DocumentLocationUpdateManyWithoutDocumentInput
  mentionedStakeholders: DocumentInvolvedStakeholderUpdateManyWithoutDocumentInput
  sessionNumber: NullableIntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input DocumentUpdateWithoutDocumentAuthorsInput {
  briefingBooksMentionedIn: BriefingBookDocumentUpdateManyWithoutDocumentInput
  createdAt: DateTimeFieldUpdateOperationsInput
  dnsaAbstract: NullableStringFieldUpdateOperationsInput
  dnsaCitation: NullableStringFieldUpdateOperationsInput
  dnsaCollection: NullableStringFieldUpdateOperationsInput
  dnsaFrom: NullableStringFieldUpdateOperationsInput
  dnsaItemNumber: NullableStringFieldUpdateOperationsInput
  dnsaOrigin: NullableStringFieldUpdateOperationsInput
  dnsaStakeholder: NullableStringFieldUpdateOperationsInput
  dnsaSubject: NullableStringFieldUpdateOperationsInput
  dnsaTo: NullableStringFieldUpdateOperationsInput
  dnsaURL: NullableStringFieldUpdateOperationsInput
  documentClassification: ClassificationOnDocumentUpdateManyWithoutDocumentInput
  documentCreationDate: NullableDateTimeFieldUpdateOperationsInput
  documentDescription: NullableStringFieldUpdateOperationsInput
  documentFiles: DocumentFileUpdateManyWithoutDocumentInput
  documentKind: KindOnDocumentUpdateManyWithoutDocumentInput
  documentMediaType: StringFieldUpdateOperationsInput
  documentOriginalID: StringFieldUpdateOperationsInput
  documentPublicationDate: NullableDateTimeFieldUpdateOperationsInput
  documentTags: TagOnDocumentUpdateManyWithoutDocumentInput
  documentTitle: StringFieldUpdateOperationsInput
  documentTranscript: NullableStringFieldUpdateOperationsInput
  documentTsVector: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  mentionedEvents: DocumentEventUpdateManyWithoutDocumentInput
  mentionedLocations: DocumentLocationUpdateManyWithoutDocumentInput
  mentionedStakeholders: DocumentInvolvedStakeholderUpdateManyWithoutDocumentInput
  sessionNumber: NullableIntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input DocumentUpdateWithoutDocumentTagsInput {
  briefingBooksMentionedIn: BriefingBookDocumentUpdateManyWithoutDocumentInput
  createdAt: DateTimeFieldUpdateOperationsInput
  dnsaAbstract: NullableStringFieldUpdateOperationsInput
  dnsaCitation: NullableStringFieldUpdateOperationsInput
  dnsaCollection: NullableStringFieldUpdateOperationsInput
  dnsaFrom: NullableStringFieldUpdateOperationsInput
  dnsaItemNumber: NullableStringFieldUpdateOperationsInput
  dnsaOrigin: NullableStringFieldUpdateOperationsInput
  dnsaStakeholder: NullableStringFieldUpdateOperationsInput
  dnsaSubject: NullableStringFieldUpdateOperationsInput
  dnsaTo: NullableStringFieldUpdateOperationsInput
  dnsaURL: NullableStringFieldUpdateOperationsInput
  documentAuthors: DocumentAuthorUpdateManyWithoutDocumentInput
  documentClassification: ClassificationOnDocumentUpdateManyWithoutDocumentInput
  documentCreationDate: NullableDateTimeFieldUpdateOperationsInput
  documentDescription: NullableStringFieldUpdateOperationsInput
  documentFiles: DocumentFileUpdateManyWithoutDocumentInput
  documentKind: KindOnDocumentUpdateManyWithoutDocumentInput
  documentMediaType: StringFieldUpdateOperationsInput
  documentOriginalID: StringFieldUpdateOperationsInput
  documentPublicationDate: NullableDateTimeFieldUpdateOperationsInput
  documentTitle: StringFieldUpdateOperationsInput
  documentTranscript: NullableStringFieldUpdateOperationsInput
  documentTsVector: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  mentionedEvents: DocumentEventUpdateManyWithoutDocumentInput
  mentionedLocations: DocumentLocationUpdateManyWithoutDocumentInput
  mentionedStakeholders: DocumentInvolvedStakeholderUpdateManyWithoutDocumentInput
  sessionNumber: NullableIntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input DocumentUpdateWithoutMentionedEventsInput {
  briefingBooksMentionedIn: BriefingBookDocumentUpdateManyWithoutDocumentInput
  createdAt: DateTimeFieldUpdateOperationsInput
  dnsaAbstract: NullableStringFieldUpdateOperationsInput
  dnsaCitation: NullableStringFieldUpdateOperationsInput
  dnsaCollection: NullableStringFieldUpdateOperationsInput
  dnsaFrom: NullableStringFieldUpdateOperationsInput
  dnsaItemNumber: NullableStringFieldUpdateOperationsInput
  dnsaOrigin: NullableStringFieldUpdateOperationsInput
  dnsaStakeholder: NullableStringFieldUpdateOperationsInput
  dnsaSubject: NullableStringFieldUpdateOperationsInput
  dnsaTo: NullableStringFieldUpdateOperationsInput
  dnsaURL: NullableStringFieldUpdateOperationsInput
  documentAuthors: DocumentAuthorUpdateManyWithoutDocumentInput
  documentClassification: ClassificationOnDocumentUpdateManyWithoutDocumentInput
  documentCreationDate: NullableDateTimeFieldUpdateOperationsInput
  documentDescription: NullableStringFieldUpdateOperationsInput
  documentFiles: DocumentFileUpdateManyWithoutDocumentInput
  documentKind: KindOnDocumentUpdateManyWithoutDocumentInput
  documentMediaType: StringFieldUpdateOperationsInput
  documentOriginalID: StringFieldUpdateOperationsInput
  documentPublicationDate: NullableDateTimeFieldUpdateOperationsInput
  documentTags: TagOnDocumentUpdateManyWithoutDocumentInput
  documentTitle: StringFieldUpdateOperationsInput
  documentTranscript: NullableStringFieldUpdateOperationsInput
  documentTsVector: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  mentionedLocations: DocumentLocationUpdateManyWithoutDocumentInput
  mentionedStakeholders: DocumentInvolvedStakeholderUpdateManyWithoutDocumentInput
  sessionNumber: NullableIntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input DocumentUpdateWithoutMentionedLocationsInput {
  briefingBooksMentionedIn: BriefingBookDocumentUpdateManyWithoutDocumentInput
  createdAt: DateTimeFieldUpdateOperationsInput
  dnsaAbstract: NullableStringFieldUpdateOperationsInput
  dnsaCitation: NullableStringFieldUpdateOperationsInput
  dnsaCollection: NullableStringFieldUpdateOperationsInput
  dnsaFrom: NullableStringFieldUpdateOperationsInput
  dnsaItemNumber: NullableStringFieldUpdateOperationsInput
  dnsaOrigin: NullableStringFieldUpdateOperationsInput
  dnsaStakeholder: NullableStringFieldUpdateOperationsInput
  dnsaSubject: NullableStringFieldUpdateOperationsInput
  dnsaTo: NullableStringFieldUpdateOperationsInput
  dnsaURL: NullableStringFieldUpdateOperationsInput
  documentAuthors: DocumentAuthorUpdateManyWithoutDocumentInput
  documentClassification: ClassificationOnDocumentUpdateManyWithoutDocumentInput
  documentCreationDate: NullableDateTimeFieldUpdateOperationsInput
  documentDescription: NullableStringFieldUpdateOperationsInput
  documentFiles: DocumentFileUpdateManyWithoutDocumentInput
  documentKind: KindOnDocumentUpdateManyWithoutDocumentInput
  documentMediaType: StringFieldUpdateOperationsInput
  documentOriginalID: StringFieldUpdateOperationsInput
  documentPublicationDate: NullableDateTimeFieldUpdateOperationsInput
  documentTags: TagOnDocumentUpdateManyWithoutDocumentInput
  documentTitle: StringFieldUpdateOperationsInput
  documentTranscript: NullableStringFieldUpdateOperationsInput
  documentTsVector: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  mentionedEvents: DocumentEventUpdateManyWithoutDocumentInput
  mentionedStakeholders: DocumentInvolvedStakeholderUpdateManyWithoutDocumentInput
  sessionNumber: NullableIntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input DocumentUpdateWithoutMentionedStakeholdersInput {
  briefingBooksMentionedIn: BriefingBookDocumentUpdateManyWithoutDocumentInput
  createdAt: DateTimeFieldUpdateOperationsInput
  dnsaAbstract: NullableStringFieldUpdateOperationsInput
  dnsaCitation: NullableStringFieldUpdateOperationsInput
  dnsaCollection: NullableStringFieldUpdateOperationsInput
  dnsaFrom: NullableStringFieldUpdateOperationsInput
  dnsaItemNumber: NullableStringFieldUpdateOperationsInput
  dnsaOrigin: NullableStringFieldUpdateOperationsInput
  dnsaStakeholder: NullableStringFieldUpdateOperationsInput
  dnsaSubject: NullableStringFieldUpdateOperationsInput
  dnsaTo: NullableStringFieldUpdateOperationsInput
  dnsaURL: NullableStringFieldUpdateOperationsInput
  documentAuthors: DocumentAuthorUpdateManyWithoutDocumentInput
  documentClassification: ClassificationOnDocumentUpdateManyWithoutDocumentInput
  documentCreationDate: NullableDateTimeFieldUpdateOperationsInput
  documentDescription: NullableStringFieldUpdateOperationsInput
  documentFiles: DocumentFileUpdateManyWithoutDocumentInput
  documentKind: KindOnDocumentUpdateManyWithoutDocumentInput
  documentMediaType: StringFieldUpdateOperationsInput
  documentOriginalID: StringFieldUpdateOperationsInput
  documentPublicationDate: NullableDateTimeFieldUpdateOperationsInput
  documentTags: TagOnDocumentUpdateManyWithoutDocumentInput
  documentTitle: StringFieldUpdateOperationsInput
  documentTranscript: NullableStringFieldUpdateOperationsInput
  documentTsVector: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  mentionedEvents: DocumentEventUpdateManyWithoutDocumentInput
  mentionedLocations: DocumentLocationUpdateManyWithoutDocumentInput
  sessionNumber: NullableIntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input DocumentUpsertWithoutBriefingBooksMentionedInInput {
  create: DocumentCreateWithoutBriefingBooksMentionedInInput!
  update: DocumentUpdateWithoutBriefingBooksMentionedInInput!
}

input DocumentUpsertWithoutDocumentAuthorsInput {
  create: DocumentCreateWithoutDocumentAuthorsInput!
  update: DocumentUpdateWithoutDocumentAuthorsInput!
}

input DocumentUpsertWithoutDocumentTagsInput {
  create: DocumentCreateWithoutDocumentTagsInput!
  update: DocumentUpdateWithoutDocumentTagsInput!
}

input DocumentUpsertWithoutMentionedEventsInput {
  create: DocumentCreateWithoutMentionedEventsInput!
  update: DocumentUpdateWithoutMentionedEventsInput!
}

input DocumentUpsertWithoutMentionedLocationsInput {
  create: DocumentCreateWithoutMentionedLocationsInput!
  update: DocumentUpdateWithoutMentionedLocationsInput!
}

input DocumentUpsertWithoutMentionedStakeholdersInput {
  create: DocumentCreateWithoutMentionedStakeholdersInput!
  update: DocumentUpdateWithoutMentionedStakeholdersInput!
}

input DocumentWhereInput {
  AND: [DocumentWhereInput!]
  briefingBooksMentionedIn: BriefingBookDocumentListRelationFilter
  createdAt: DateTimeFilter
  dnsaAbstract: StringNullableFilter
  dnsaCitation: StringNullableFilter
  dnsaCollection: StringNullableFilter
  dnsaFrom: StringNullableFilter
  dnsaItemNumber: StringNullableFilter
  dnsaOrigin: StringNullableFilter
  dnsaStakeholder: StringNullableFilter
  dnsaSubject: StringNullableFilter
  dnsaTo: StringNullableFilter
  dnsaURL: StringNullableFilter
  documentAuthors: DocumentAuthorListRelationFilter
  documentClassification: ClassificationOnDocumentListRelationFilter
  documentCreationDate: DateTimeNullableFilter
  documentDescription: StringNullableFilter
  documentFiles: DocumentFileListRelationFilter
  documentKind: KindOnDocumentListRelationFilter
  documentMediaType: StringFilter
  documentOriginalID: StringFilter
  documentPublicationDate: DateTimeNullableFilter
  documentTags: TagOnDocumentListRelationFilter
  documentTitle: StringFilter
  documentTranscript: StringNullableFilter
  documentTsVector: StringNullableFilter
  id: StringFilter
  mentionedEvents: DocumentEventListRelationFilter
  mentionedLocations: DocumentLocationListRelationFilter
  mentionedStakeholders: DocumentInvolvedStakeholderListRelationFilter
  NOT: [DocumentWhereInput!]
  OR: [DocumentWhereInput!]
  sessionNumber: IntNullableFilter
  updatedAt: DateTimeFilter
}

input DocumentWhereUniqueInput {
  id: String
}

type Event {
  eventDescription: String
  eventEndDate: DateTime
  eventIdSeq: Int!
  eventLocations(after: LocationOnEventWhereUniqueInput, before: LocationOnEventWhereUniqueInput, first: Int, last: Int): [LocationOnEvent!]!
  eventStakeholders(after: StakeholderEventWhereUniqueInput, before: StakeholderEventWhereUniqueInput, first: Int, last: Int): [StakeholderEvent!]!
  eventStartDate: DateTime!
  eventTags(after: TagOnEventWhereUniqueInput, before: TagOnEventWhereUniqueInput, first: Int, last: Int): [TagOnEvent!]!
  eventTitle: String!
  id: String!
}

input EventCreateInput {
  briefingBooksMentionedIn: BriefingBookEventCreateManyWithoutEventInput
  createdAt: DateTime
  documentsMentionedIn: DocumentEventCreateManyWithoutEventInput
  eventDescription: String
  eventEndDate: DateTime
  eventIdSeq: Int
  eventLocations: LocationOnEventCreateManyWithoutEventInput
  eventStakeholders: StakeholderEventCreateManyWithoutEventInput
  eventStartDate: DateTime!
  eventTags: TagOnEventCreateManyWithoutEventInput
  eventTitle: String!
  eventTsVector: String
  id: String
  updatedAt: DateTime
}

input EventCreateOneWithoutBriefingBooksMentionedInInput {
  connect: EventWhereUniqueInput
  connectOrCreate: EventCreateOrConnectWithoutbriefingBooksMentionedInInput
  create: EventCreateWithoutBriefingBooksMentionedInInput
}

input EventCreateOneWithoutDocumentsMentionedInInput {
  connect: EventWhereUniqueInput
  connectOrCreate: EventCreateOrConnectWithoutdocumentsMentionedInInput
  create: EventCreateWithoutDocumentsMentionedInInput
}

input EventCreateOneWithoutEventLocationsInput {
  connect: EventWhereUniqueInput
  connectOrCreate: EventCreateOrConnectWithouteventLocationsInput
  create: EventCreateWithoutEventLocationsInput
}

input EventCreateOneWithoutEventStakeholdersInput {
  connect: EventWhereUniqueInput
  connectOrCreate: EventCreateOrConnectWithouteventStakeholdersInput
  create: EventCreateWithoutEventStakeholdersInput
}

input EventCreateOneWithoutEventTagsInput {
  connect: EventWhereUniqueInput
  connectOrCreate: EventCreateOrConnectWithouteventTagsInput
  create: EventCreateWithoutEventTagsInput
}

input EventCreateOrConnectWithoutbriefingBooksMentionedInInput {
  create: EventCreateWithoutBriefingBooksMentionedInInput!
  where: EventWhereUniqueInput!
}

input EventCreateOrConnectWithoutdocumentsMentionedInInput {
  create: EventCreateWithoutDocumentsMentionedInInput!
  where: EventWhereUniqueInput!
}

input EventCreateOrConnectWithouteventLocationsInput {
  create: EventCreateWithoutEventLocationsInput!
  where: EventWhereUniqueInput!
}

input EventCreateOrConnectWithouteventStakeholdersInput {
  create: EventCreateWithoutEventStakeholdersInput!
  where: EventWhereUniqueInput!
}

input EventCreateOrConnectWithouteventTagsInput {
  create: EventCreateWithoutEventTagsInput!
  where: EventWhereUniqueInput!
}

input EventCreateWithoutBriefingBooksMentionedInInput {
  createdAt: DateTime
  documentsMentionedIn: DocumentEventCreateManyWithoutEventInput
  eventDescription: String
  eventEndDate: DateTime
  eventIdSeq: Int
  eventLocations: LocationOnEventCreateManyWithoutEventInput
  eventStakeholders: StakeholderEventCreateManyWithoutEventInput
  eventStartDate: DateTime!
  eventTags: TagOnEventCreateManyWithoutEventInput
  eventTitle: String!
  eventTsVector: String
  id: String
  updatedAt: DateTime
}

input EventCreateWithoutDocumentsMentionedInInput {
  briefingBooksMentionedIn: BriefingBookEventCreateManyWithoutEventInput
  createdAt: DateTime
  eventDescription: String
  eventEndDate: DateTime
  eventIdSeq: Int
  eventLocations: LocationOnEventCreateManyWithoutEventInput
  eventStakeholders: StakeholderEventCreateManyWithoutEventInput
  eventStartDate: DateTime!
  eventTags: TagOnEventCreateManyWithoutEventInput
  eventTitle: String!
  eventTsVector: String
  id: String
  updatedAt: DateTime
}

input EventCreateWithoutEventLocationsInput {
  briefingBooksMentionedIn: BriefingBookEventCreateManyWithoutEventInput
  createdAt: DateTime
  documentsMentionedIn: DocumentEventCreateManyWithoutEventInput
  eventDescription: String
  eventEndDate: DateTime
  eventIdSeq: Int
  eventStakeholders: StakeholderEventCreateManyWithoutEventInput
  eventStartDate: DateTime!
  eventTags: TagOnEventCreateManyWithoutEventInput
  eventTitle: String!
  eventTsVector: String
  id: String
  updatedAt: DateTime
}

input EventCreateWithoutEventStakeholdersInput {
  briefingBooksMentionedIn: BriefingBookEventCreateManyWithoutEventInput
  createdAt: DateTime
  documentsMentionedIn: DocumentEventCreateManyWithoutEventInput
  eventDescription: String
  eventEndDate: DateTime
  eventIdSeq: Int
  eventLocations: LocationOnEventCreateManyWithoutEventInput
  eventStartDate: DateTime!
  eventTags: TagOnEventCreateManyWithoutEventInput
  eventTitle: String!
  eventTsVector: String
  id: String
  updatedAt: DateTime
}

input EventCreateWithoutEventTagsInput {
  briefingBooksMentionedIn: BriefingBookEventCreateManyWithoutEventInput
  createdAt: DateTime
  documentsMentionedIn: DocumentEventCreateManyWithoutEventInput
  eventDescription: String
  eventEndDate: DateTime
  eventIdSeq: Int
  eventLocations: LocationOnEventCreateManyWithoutEventInput
  eventStakeholders: StakeholderEventCreateManyWithoutEventInput
  eventStartDate: DateTime!
  eventTitle: String!
  eventTsVector: String
  id: String
  updatedAt: DateTime
}

input EventOrderByInput {
  createdAt: SortOrder
  eventDescription: SortOrder
  eventEndDate: SortOrder
  eventIdSeq: SortOrder
  eventStartDate: SortOrder
  eventTitle: SortOrder
  eventTsVector: SortOrder
  id: SortOrder
  updatedAt: SortOrder
}

input EventUpdateInput {
  briefingBooksMentionedIn: BriefingBookEventUpdateManyWithoutEventInput
  createdAt: DateTimeFieldUpdateOperationsInput
  documentsMentionedIn: DocumentEventUpdateManyWithoutEventInput
  eventDescription: NullableStringFieldUpdateOperationsInput
  eventEndDate: NullableDateTimeFieldUpdateOperationsInput
  eventIdSeq: IntFieldUpdateOperationsInput
  eventLocations: LocationOnEventUpdateManyWithoutEventInput
  eventStakeholders: StakeholderEventUpdateManyWithoutEventInput
  eventStartDate: DateTimeFieldUpdateOperationsInput
  eventTags: TagOnEventUpdateManyWithoutEventInput
  eventTitle: StringFieldUpdateOperationsInput
  eventTsVector: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input EventUpdateOneRequiredWithoutBriefingBooksMentionedInInput {
  connect: EventWhereUniqueInput
  connectOrCreate: EventCreateOrConnectWithoutbriefingBooksMentionedInInput
  create: EventCreateWithoutBriefingBooksMentionedInInput
  update: EventUpdateWithoutBriefingBooksMentionedInInput
  upsert: EventUpsertWithoutBriefingBooksMentionedInInput
}

input EventUpdateOneRequiredWithoutDocumentsMentionedInInput {
  connect: EventWhereUniqueInput
  connectOrCreate: EventCreateOrConnectWithoutdocumentsMentionedInInput
  create: EventCreateWithoutDocumentsMentionedInInput
  update: EventUpdateWithoutDocumentsMentionedInInput
  upsert: EventUpsertWithoutDocumentsMentionedInInput
}

input EventUpdateOneRequiredWithoutEventLocationsInput {
  connect: EventWhereUniqueInput
  connectOrCreate: EventCreateOrConnectWithouteventLocationsInput
  create: EventCreateWithoutEventLocationsInput
  update: EventUpdateWithoutEventLocationsInput
  upsert: EventUpsertWithoutEventLocationsInput
}

input EventUpdateOneRequiredWithoutEventStakeholdersInput {
  connect: EventWhereUniqueInput
  connectOrCreate: EventCreateOrConnectWithouteventStakeholdersInput
  create: EventCreateWithoutEventStakeholdersInput
  update: EventUpdateWithoutEventStakeholdersInput
  upsert: EventUpsertWithoutEventStakeholdersInput
}

input EventUpdateOneRequiredWithoutEventTagsInput {
  connect: EventWhereUniqueInput
  connectOrCreate: EventCreateOrConnectWithouteventTagsInput
  create: EventCreateWithoutEventTagsInput
  update: EventUpdateWithoutEventTagsInput
  upsert: EventUpsertWithoutEventTagsInput
}

input EventUpdateWithoutBriefingBooksMentionedInInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  documentsMentionedIn: DocumentEventUpdateManyWithoutEventInput
  eventDescription: NullableStringFieldUpdateOperationsInput
  eventEndDate: NullableDateTimeFieldUpdateOperationsInput
  eventIdSeq: IntFieldUpdateOperationsInput
  eventLocations: LocationOnEventUpdateManyWithoutEventInput
  eventStakeholders: StakeholderEventUpdateManyWithoutEventInput
  eventStartDate: DateTimeFieldUpdateOperationsInput
  eventTags: TagOnEventUpdateManyWithoutEventInput
  eventTitle: StringFieldUpdateOperationsInput
  eventTsVector: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input EventUpdateWithoutDocumentsMentionedInInput {
  briefingBooksMentionedIn: BriefingBookEventUpdateManyWithoutEventInput
  createdAt: DateTimeFieldUpdateOperationsInput
  eventDescription: NullableStringFieldUpdateOperationsInput
  eventEndDate: NullableDateTimeFieldUpdateOperationsInput
  eventIdSeq: IntFieldUpdateOperationsInput
  eventLocations: LocationOnEventUpdateManyWithoutEventInput
  eventStakeholders: StakeholderEventUpdateManyWithoutEventInput
  eventStartDate: DateTimeFieldUpdateOperationsInput
  eventTags: TagOnEventUpdateManyWithoutEventInput
  eventTitle: StringFieldUpdateOperationsInput
  eventTsVector: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input EventUpdateWithoutEventLocationsInput {
  briefingBooksMentionedIn: BriefingBookEventUpdateManyWithoutEventInput
  createdAt: DateTimeFieldUpdateOperationsInput
  documentsMentionedIn: DocumentEventUpdateManyWithoutEventInput
  eventDescription: NullableStringFieldUpdateOperationsInput
  eventEndDate: NullableDateTimeFieldUpdateOperationsInput
  eventIdSeq: IntFieldUpdateOperationsInput
  eventStakeholders: StakeholderEventUpdateManyWithoutEventInput
  eventStartDate: DateTimeFieldUpdateOperationsInput
  eventTags: TagOnEventUpdateManyWithoutEventInput
  eventTitle: StringFieldUpdateOperationsInput
  eventTsVector: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input EventUpdateWithoutEventStakeholdersInput {
  briefingBooksMentionedIn: BriefingBookEventUpdateManyWithoutEventInput
  createdAt: DateTimeFieldUpdateOperationsInput
  documentsMentionedIn: DocumentEventUpdateManyWithoutEventInput
  eventDescription: NullableStringFieldUpdateOperationsInput
  eventEndDate: NullableDateTimeFieldUpdateOperationsInput
  eventIdSeq: IntFieldUpdateOperationsInput
  eventLocations: LocationOnEventUpdateManyWithoutEventInput
  eventStartDate: DateTimeFieldUpdateOperationsInput
  eventTags: TagOnEventUpdateManyWithoutEventInput
  eventTitle: StringFieldUpdateOperationsInput
  eventTsVector: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input EventUpdateWithoutEventTagsInput {
  briefingBooksMentionedIn: BriefingBookEventUpdateManyWithoutEventInput
  createdAt: DateTimeFieldUpdateOperationsInput
  documentsMentionedIn: DocumentEventUpdateManyWithoutEventInput
  eventDescription: NullableStringFieldUpdateOperationsInput
  eventEndDate: NullableDateTimeFieldUpdateOperationsInput
  eventIdSeq: IntFieldUpdateOperationsInput
  eventLocations: LocationOnEventUpdateManyWithoutEventInput
  eventStakeholders: StakeholderEventUpdateManyWithoutEventInput
  eventStartDate: DateTimeFieldUpdateOperationsInput
  eventTitle: StringFieldUpdateOperationsInput
  eventTsVector: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input EventUpsertWithoutBriefingBooksMentionedInInput {
  create: EventCreateWithoutBriefingBooksMentionedInInput!
  update: EventUpdateWithoutBriefingBooksMentionedInInput!
}

input EventUpsertWithoutDocumentsMentionedInInput {
  create: EventCreateWithoutDocumentsMentionedInInput!
  update: EventUpdateWithoutDocumentsMentionedInInput!
}

input EventUpsertWithoutEventLocationsInput {
  create: EventCreateWithoutEventLocationsInput!
  update: EventUpdateWithoutEventLocationsInput!
}

input EventUpsertWithoutEventStakeholdersInput {
  create: EventCreateWithoutEventStakeholdersInput!
  update: EventUpdateWithoutEventStakeholdersInput!
}

input EventUpsertWithoutEventTagsInput {
  create: EventCreateWithoutEventTagsInput!
  update: EventUpdateWithoutEventTagsInput!
}

input EventWhereInput {
  AND: [EventWhereInput!]
  briefingBooksMentionedIn: BriefingBookEventListRelationFilter
  createdAt: DateTimeFilter
  documentsMentionedIn: DocumentEventListRelationFilter
  eventDescription: StringNullableFilter
  eventEndDate: DateTimeNullableFilter
  eventIdSeq: IntFilter
  eventLocations: LocationOnEventListRelationFilter
  eventStakeholders: StakeholderEventListRelationFilter
  eventStartDate: DateTimeFilter
  eventTags: TagOnEventListRelationFilter
  eventTitle: StringFilter
  eventTsVector: StringNullableFilter
  id: StringFilter
  NOT: [EventWhereInput!]
  OR: [EventWhereInput!]
  updatedAt: DateTimeFilter
}

input EventWhereUniqueInput {
  id: String
}

type File {
  contentType: String!
  id: String!
  name: String!
  size: Int!
  url: String!
}

input FileCreateInput {
  contentType: String!
  createdAt: DateTime
  documentsIncludedIn: DocumentFileCreateManyWithoutFileInput
  id: String
  name: String!
  secret: String
  size: Int!
  updatedAt: DateTime
  url: String!
}

input FileCreateOneWithoutDocumentsIncludedInInput {
  connect: FileWhereUniqueInput
  connectOrCreate: FileCreateOrConnectWithoutdocumentsIncludedInInput
  create: FileCreateWithoutDocumentsIncludedInInput
}

input FileCreateOrConnectWithoutdocumentsIncludedInInput {
  create: FileCreateWithoutDocumentsIncludedInInput!
  where: FileWhereUniqueInput!
}

input FileCreateWithoutDocumentsIncludedInInput {
  contentType: String!
  createdAt: DateTime
  id: String
  name: String!
  secret: String
  size: Int!
  updatedAt: DateTime
  url: String!
}

input FileOrderByInput {
  contentType: SortOrder
  createdAt: SortOrder
  id: SortOrder
  name: SortOrder
  secret: SortOrder
  size: SortOrder
  updatedAt: SortOrder
  url: SortOrder
}

input FileUpdateOneRequiredWithoutDocumentsIncludedInInput {
  connect: FileWhereUniqueInput
  connectOrCreate: FileCreateOrConnectWithoutdocumentsIncludedInInput
  create: FileCreateWithoutDocumentsIncludedInInput
  update: FileUpdateWithoutDocumentsIncludedInInput
  upsert: FileUpsertWithoutDocumentsIncludedInInput
}

input FileUpdateWithoutDocumentsIncludedInInput {
  contentType: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  secret: StringFieldUpdateOperationsInput
  size: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
}

input FileUpsertWithoutDocumentsIncludedInInput {
  create: FileCreateWithoutDocumentsIncludedInInput!
  update: FileUpdateWithoutDocumentsIncludedInInput!
}

input FileWhereInput {
  AND: [FileWhereInput!]
  contentType: StringFilter
  createdAt: DateTimeFilter
  documentsIncludedIn: DocumentFileListRelationFilter
  id: StringFilter
  name: StringFilter
  NOT: [FileWhereInput!]
  OR: [FileWhereInput!]
  secret: StringFilter
  size: IntFilter
  updatedAt: DateTimeFilter
  url: StringFilter
}

input FileWhereUniqueInput {
  id: String
  secret: String
  url: String
}

input IntFieldUpdateOperationsInput {
  decrement: Int
  divide: Int
  increment: Int
  multiply: Int
  set: Int
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input IntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

type Kind {
  createdAt: DateTime!
  documentsWithKind(after: KindOnDocumentWhereUniqueInput, before: KindOnDocumentWhereUniqueInput, first: Int, last: Int): [KindOnDocument!]!
  id: String!
  name: String!
  updatedAt: DateTime!
}

input KindCreateOneWithoutDocumentsWithKindInput {
  connect: KindWhereUniqueInput
  connectOrCreate: KindCreateOrConnectWithoutdocumentsWithKindInput
  create: KindCreateWithoutDocumentsWithKindInput
}

input KindCreateOrConnectWithoutdocumentsWithKindInput {
  create: KindCreateWithoutDocumentsWithKindInput!
  where: KindWhereUniqueInput!
}

input KindCreateWithoutDocumentsWithKindInput {
  createdAt: DateTime
  id: String!
  name: String!
  updatedAt: DateTime
}

type KindOnDocument {
  Document: Document!
  DocumentId: String!
  id: String!
  Kind: Kind!
  KindId: String!
}

input KindOnDocumentCreateInput {
  Document: DocumentCreateOneWithoutDocumentKindInput!
  id: String
  Kind: KindCreateOneWithoutDocumentsWithKindInput!
}

input KindOnDocumentCreateManyWithoutDocumentInput {
  connect: [KindOnDocumentWhereUniqueInput!]
  connectOrCreate: [KindOnDocumentCreateOrConnectWithoutDocumentInput!]
  create: [KindOnDocumentCreateWithoutDocumentInput!]
}

input KindOnDocumentCreateOrConnectWithoutDocumentInput {
  create: KindOnDocumentCreateWithoutDocumentInput!
  where: KindOnDocumentWhereUniqueInput!
}

input KindOnDocumentCreateWithoutDocumentInput {
  id: String
  Kind: KindCreateOneWithoutDocumentsWithKindInput!
}

input KindOnDocumentKindOnDocument_AB_uniqueCompoundUniqueInput {
  A: String!
  B: String!
}

input KindOnDocumentListRelationFilter {
  every: KindOnDocumentWhereInput
  none: KindOnDocumentWhereInput
  some: KindOnDocumentWhereInput
}

input KindOnDocumentOrderByInput {
  A: SortOrder
  B: SortOrder
  id: SortOrder
}

input KindOnDocumentScalarWhereInput {
  A: StringFilter
  AND: [KindOnDocumentScalarWhereInput!]
  B: StringFilter
  id: StringFilter
  NOT: [KindOnDocumentScalarWhereInput!]
  OR: [KindOnDocumentScalarWhereInput!]
}

input KindOnDocumentUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
}

input KindOnDocumentUpdateManyWithoutDocumentInput {
  connect: [KindOnDocumentWhereUniqueInput!]
  connectOrCreate: [KindOnDocumentCreateOrConnectWithoutDocumentInput!]
  create: [KindOnDocumentCreateWithoutDocumentInput!]
  delete: [KindOnDocumentWhereUniqueInput!]
  deleteMany: [KindOnDocumentScalarWhereInput!]
  disconnect: [KindOnDocumentWhereUniqueInput!]
  set: [KindOnDocumentWhereUniqueInput!]
  update: [KindOnDocumentUpdateWithWhereUniqueWithoutDocumentInput!]
  updateMany: [KindOnDocumentUpdateManyWithWhereWithoutDocumentInput!]
  upsert: [KindOnDocumentUpsertWithWhereUniqueWithoutDocumentInput!]
}

input KindOnDocumentUpdateManyWithWhereWithoutDocumentInput {
  data: KindOnDocumentUpdateManyMutationInput!
  where: KindOnDocumentScalarWhereInput!
}

input KindOnDocumentUpdateWithoutDocumentInput {
  id: StringFieldUpdateOperationsInput
  Kind: KindUpdateOneRequiredWithoutDocumentsWithKindInput
}

input KindOnDocumentUpdateWithWhereUniqueWithoutDocumentInput {
  data: KindOnDocumentUpdateWithoutDocumentInput!
  where: KindOnDocumentWhereUniqueInput!
}

input KindOnDocumentUpsertWithWhereUniqueWithoutDocumentInput {
  create: KindOnDocumentCreateWithoutDocumentInput!
  update: KindOnDocumentUpdateWithoutDocumentInput!
  where: KindOnDocumentWhereUniqueInput!
}

input KindOnDocumentWhereInput {
  A: StringFilter
  AND: [KindOnDocumentWhereInput!]
  B: StringFilter
  Document: DocumentWhereInput
  id: StringFilter
  Kind: KindWhereInput
  NOT: [KindOnDocumentWhereInput!]
  OR: [KindOnDocumentWhereInput!]
}

input KindOnDocumentWhereUniqueInput {
  id: String
  KindOnDocument_AB_unique: KindOnDocumentKindOnDocument_AB_uniqueCompoundUniqueInput
}

input KindOrderByInput {
  createdAt: SortOrder
  id: SortOrder
  name: SortOrder
  updatedAt: SortOrder
}

input KindUpdateOneRequiredWithoutDocumentsWithKindInput {
  connect: KindWhereUniqueInput
  connectOrCreate: KindCreateOrConnectWithoutdocumentsWithKindInput
  create: KindCreateWithoutDocumentsWithKindInput
  update: KindUpdateWithoutDocumentsWithKindInput
  upsert: KindUpsertWithoutDocumentsWithKindInput
}

input KindUpdateWithoutDocumentsWithKindInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input KindUpsertWithoutDocumentsWithKindInput {
  create: KindCreateWithoutDocumentsWithKindInput!
  update: KindUpdateWithoutDocumentsWithKindInput!
}

input KindWhereInput {
  AND: [KindWhereInput!]
  createdAt: DateTimeFilter
  documentsWithKind: KindOnDocumentListRelationFilter
  id: StringFilter
  name: StringFilter
  NOT: [KindWhereInput!]
  OR: [KindWhereInput!]
  updatedAt: DateTimeFilter
}

input KindWhereUniqueInput {
  id: String
  name: String
}

type Location {
  documentsMentionedIn(after: DocumentLocationWhereUniqueInput, before: DocumentLocationWhereUniqueInput, first: Int, last: Int): [DocumentLocation!]!
  id: String!
  locationDescription: String
  locationEvents(after: LocationOnEventWhereUniqueInput, before: LocationOnEventWhereUniqueInput, first: Int, last: Int): [LocationOnEvent!]!
  locationName: String!
  locationWikipediaUri: String
}

input LocationCreateInput {
  createdAt: DateTime
  documentsMentionedIn: DocumentLocationCreateManyWithoutLocationInput
  id: String
  locationDescription: String
  locationEvents: LocationOnEventCreateManyWithoutLocationInput
  locationLatitude: Int
  locationLongitude: Int
  locationName: String!
  locationWikipediaUri: String
  updatedAt: DateTime
}

input LocationCreateOneWithoutDocumentsMentionedInInput {
  connect: LocationWhereUniqueInput
  connectOrCreate: LocationCreateOrConnectWithoutdocumentsMentionedInInput
  create: LocationCreateWithoutDocumentsMentionedInInput
}

input LocationCreateOneWithoutLocationEventsInput {
  connect: LocationWhereUniqueInput
  connectOrCreate: LocationCreateOrConnectWithoutlocationEventsInput
  create: LocationCreateWithoutLocationEventsInput
}

input LocationCreateOrConnectWithoutdocumentsMentionedInInput {
  create: LocationCreateWithoutDocumentsMentionedInInput!
  where: LocationWhereUniqueInput!
}

input LocationCreateOrConnectWithoutlocationEventsInput {
  create: LocationCreateWithoutLocationEventsInput!
  where: LocationWhereUniqueInput!
}

input LocationCreateWithoutDocumentsMentionedInInput {
  createdAt: DateTime
  id: String
  locationDescription: String
  locationEvents: LocationOnEventCreateManyWithoutLocationInput
  locationLatitude: Int
  locationLongitude: Int
  locationName: String!
  locationWikipediaUri: String
  updatedAt: DateTime
}

input LocationCreateWithoutLocationEventsInput {
  createdAt: DateTime
  documentsMentionedIn: DocumentLocationCreateManyWithoutLocationInput
  id: String
  locationDescription: String
  locationLatitude: Int
  locationLongitude: Int
  locationName: String!
  locationWikipediaUri: String
  updatedAt: DateTime
}

type LocationOnEvent {
  Event: Event!
  EventId: String!
  id: String!
  Location: Location!
  LocationId: String!
}

input LocationOnEventCreateInput {
  Event: EventCreateOneWithoutEventLocationsInput!
  id: String
  Location: LocationCreateOneWithoutLocationEventsInput!
}

input LocationOnEventCreateManyWithoutEventInput {
  connect: [LocationOnEventWhereUniqueInput!]
  connectOrCreate: [LocationOnEventCreateOrConnectWithoutEventInput!]
  create: [LocationOnEventCreateWithoutEventInput!]
}

input LocationOnEventCreateManyWithoutLocationInput {
  connect: [LocationOnEventWhereUniqueInput!]
  connectOrCreate: [LocationOnEventCreateOrConnectWithoutLocationInput!]
  create: [LocationOnEventCreateWithoutLocationInput!]
}

input LocationOnEventCreateOrConnectWithoutEventInput {
  create: LocationOnEventCreateWithoutEventInput!
  where: LocationOnEventWhereUniqueInput!
}

input LocationOnEventCreateOrConnectWithoutLocationInput {
  create: LocationOnEventCreateWithoutLocationInput!
  where: LocationOnEventWhereUniqueInput!
}

input LocationOnEventCreateWithoutEventInput {
  id: String
  Location: LocationCreateOneWithoutLocationEventsInput!
}

input LocationOnEventCreateWithoutLocationInput {
  Event: EventCreateOneWithoutEventLocationsInput!
  id: String
}

input LocationOnEventListRelationFilter {
  every: LocationOnEventWhereInput
  none: LocationOnEventWhereInput
  some: LocationOnEventWhereInput
}

input LocationOnEventLocationOnEvent_AB_uniqueCompoundUniqueInput {
  A: String!
  B: String!
}

input LocationOnEventScalarWhereInput {
  A: StringFilter
  AND: [LocationOnEventScalarWhereInput!]
  B: StringFilter
  id: StringFilter
  NOT: [LocationOnEventScalarWhereInput!]
  OR: [LocationOnEventScalarWhereInput!]
}

input LocationOnEventUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
}

input LocationOnEventUpdateManyWithoutEventInput {
  connect: [LocationOnEventWhereUniqueInput!]
  connectOrCreate: [LocationOnEventCreateOrConnectWithoutEventInput!]
  create: [LocationOnEventCreateWithoutEventInput!]
  delete: [LocationOnEventWhereUniqueInput!]
  deleteMany: [LocationOnEventScalarWhereInput!]
  disconnect: [LocationOnEventWhereUniqueInput!]
  set: [LocationOnEventWhereUniqueInput!]
  update: [LocationOnEventUpdateWithWhereUniqueWithoutEventInput!]
  updateMany: [LocationOnEventUpdateManyWithWhereWithoutEventInput!]
  upsert: [LocationOnEventUpsertWithWhereUniqueWithoutEventInput!]
}

input LocationOnEventUpdateManyWithoutLocationInput {
  connect: [LocationOnEventWhereUniqueInput!]
  connectOrCreate: [LocationOnEventCreateOrConnectWithoutLocationInput!]
  create: [LocationOnEventCreateWithoutLocationInput!]
  delete: [LocationOnEventWhereUniqueInput!]
  deleteMany: [LocationOnEventScalarWhereInput!]
  disconnect: [LocationOnEventWhereUniqueInput!]
  set: [LocationOnEventWhereUniqueInput!]
  update: [LocationOnEventUpdateWithWhereUniqueWithoutLocationInput!]
  updateMany: [LocationOnEventUpdateManyWithWhereWithoutLocationInput!]
  upsert: [LocationOnEventUpsertWithWhereUniqueWithoutLocationInput!]
}

input LocationOnEventUpdateManyWithWhereWithoutEventInput {
  data: LocationOnEventUpdateManyMutationInput!
  where: LocationOnEventScalarWhereInput!
}

input LocationOnEventUpdateManyWithWhereWithoutLocationInput {
  data: LocationOnEventUpdateManyMutationInput!
  where: LocationOnEventScalarWhereInput!
}

input LocationOnEventUpdateWithoutEventInput {
  id: StringFieldUpdateOperationsInput
  Location: LocationUpdateOneRequiredWithoutLocationEventsInput
}

input LocationOnEventUpdateWithoutLocationInput {
  Event: EventUpdateOneRequiredWithoutEventLocationsInput
  id: StringFieldUpdateOperationsInput
}

input LocationOnEventUpdateWithWhereUniqueWithoutEventInput {
  data: LocationOnEventUpdateWithoutEventInput!
  where: LocationOnEventWhereUniqueInput!
}

input LocationOnEventUpdateWithWhereUniqueWithoutLocationInput {
  data: LocationOnEventUpdateWithoutLocationInput!
  where: LocationOnEventWhereUniqueInput!
}

input LocationOnEventUpsertWithWhereUniqueWithoutEventInput {
  create: LocationOnEventCreateWithoutEventInput!
  update: LocationOnEventUpdateWithoutEventInput!
  where: LocationOnEventWhereUniqueInput!
}

input LocationOnEventUpsertWithWhereUniqueWithoutLocationInput {
  create: LocationOnEventCreateWithoutLocationInput!
  update: LocationOnEventUpdateWithoutLocationInput!
  where: LocationOnEventWhereUniqueInput!
}

input LocationOnEventWhereInput {
  A: StringFilter
  AND: [LocationOnEventWhereInput!]
  B: StringFilter
  Event: EventWhereInput
  id: StringFilter
  Location: LocationWhereInput
  NOT: [LocationOnEventWhereInput!]
  OR: [LocationOnEventWhereInput!]
}

input LocationOnEventWhereUniqueInput {
  id: String
  LocationOnEvent_AB_unique: LocationOnEventLocationOnEvent_AB_uniqueCompoundUniqueInput
}

input LocationOrderByInput {
  createdAt: SortOrder
  id: SortOrder
  locationDescription: SortOrder
  locationLatitude: SortOrder
  locationLongitude: SortOrder
  locationName: SortOrder
  locationWikipediaUri: SortOrder
  updatedAt: SortOrder
}

input LocationUpdateInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  documentsMentionedIn: DocumentLocationUpdateManyWithoutLocationInput
  id: StringFieldUpdateOperationsInput
  locationDescription: NullableStringFieldUpdateOperationsInput
  locationEvents: LocationOnEventUpdateManyWithoutLocationInput
  locationLatitude: NullableIntFieldUpdateOperationsInput
  locationLongitude: NullableIntFieldUpdateOperationsInput
  locationName: StringFieldUpdateOperationsInput
  locationWikipediaUri: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input LocationUpdateOneRequiredWithoutDocumentsMentionedInInput {
  connect: LocationWhereUniqueInput
  connectOrCreate: LocationCreateOrConnectWithoutdocumentsMentionedInInput
  create: LocationCreateWithoutDocumentsMentionedInInput
  update: LocationUpdateWithoutDocumentsMentionedInInput
  upsert: LocationUpsertWithoutDocumentsMentionedInInput
}

input LocationUpdateOneRequiredWithoutLocationEventsInput {
  connect: LocationWhereUniqueInput
  connectOrCreate: LocationCreateOrConnectWithoutlocationEventsInput
  create: LocationCreateWithoutLocationEventsInput
  update: LocationUpdateWithoutLocationEventsInput
  upsert: LocationUpsertWithoutLocationEventsInput
}

input LocationUpdateWithoutDocumentsMentionedInInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  locationDescription: NullableStringFieldUpdateOperationsInput
  locationEvents: LocationOnEventUpdateManyWithoutLocationInput
  locationLatitude: NullableIntFieldUpdateOperationsInput
  locationLongitude: NullableIntFieldUpdateOperationsInput
  locationName: StringFieldUpdateOperationsInput
  locationWikipediaUri: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input LocationUpdateWithoutLocationEventsInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  documentsMentionedIn: DocumentLocationUpdateManyWithoutLocationInput
  id: StringFieldUpdateOperationsInput
  locationDescription: NullableStringFieldUpdateOperationsInput
  locationLatitude: NullableIntFieldUpdateOperationsInput
  locationLongitude: NullableIntFieldUpdateOperationsInput
  locationName: StringFieldUpdateOperationsInput
  locationWikipediaUri: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input LocationUpsertWithoutDocumentsMentionedInInput {
  create: LocationCreateWithoutDocumentsMentionedInInput!
  update: LocationUpdateWithoutDocumentsMentionedInInput!
}

input LocationUpsertWithoutLocationEventsInput {
  create: LocationCreateWithoutLocationEventsInput!
  update: LocationUpdateWithoutLocationEventsInput!
}

input LocationWhereInput {
  AND: [LocationWhereInput!]
  createdAt: DateTimeFilter
  documentsMentionedIn: DocumentLocationListRelationFilter
  id: StringFilter
  locationDescription: StringNullableFilter
  locationEvents: LocationOnEventListRelationFilter
  locationLatitude: IntNullableFilter
  locationLongitude: IntNullableFilter
  locationName: StringFilter
  locationWikipediaUri: StringNullableFilter
  NOT: [LocationWhereInput!]
  OR: [LocationWhereInput!]
  updatedAt: DateTimeFilter
}

input LocationWhereUniqueInput {
  id: String
  locationName: String
}

enum MediaType {
  Audio
  Embedd
  Image
  Markdown
  Pdf
  RawText
  Video
}

type Mutation {
  createOneClassificationOnDocument(data: ClassificationOnDocumentCreateInput!): ClassificationOnDocument!
  createOneDocument(data: DocumentCreateInput!): Document!
  createOneDocumentAuthor(data: DocumentAuthorCreateInput!): DocumentAuthor!
  createOneDocumentEvent(data: DocumentEventCreateInput!): DocumentEvent!
  createOneDocumentFile(data: DocumentFileCreateInput!): DocumentFile!
  createOneDocumentInvolvedStakeholder(data: DocumentInvolvedStakeholderCreateInput!): DocumentInvolvedStakeholder!
  createOneDocumentLocation(data: DocumentLocationCreateInput!): DocumentLocation!
  createOneEvent(data: EventCreateInput!): Event!
  createOneFile(data: FileCreateInput!): File!
  createOneKindOnDocument(data: KindOnDocumentCreateInput!): KindOnDocument!
  createOneLocation(data: LocationCreateInput!): Location!
  createOneLocationOnEvent(data: LocationOnEventCreateInput!): LocationOnEvent!
  createOneStakeholder(data: StakeholderCreateInput!): Stakeholder!
  createOneStakeholderEvent(data: StakeholderEventCreateInput!): StakeholderEvent!
  createOneTag(data: TagCreateInput!): Tag!
  createOneTagOnDocument(data: TagOnDocumentCreateInput!): TagOnDocument!
  createOneTagOnEvent(data: TagOnEventCreateInput!): TagOnEvent!
  createUser(email: String!, password: String!, role: String!, userName: String): UserAuthPayload
  deleteOneDocument(where: DocumentWhereUniqueInput!): Document
  deleteOneEvent(where: EventWhereUniqueInput!): Event
  deleteOneLocation(where: LocationWhereUniqueInput!): Location
  deleteOneStakeholder(where: StakeholderWhereUniqueInput!): Stakeholder
  deleteOneUser(where: UserWhereUniqueInput!): User
  signinUser(email: String!, password: String!): UserAuthPayload
  updateOneDocument(data: DocumentUpdateInput!, where: DocumentWhereUniqueInput!): Document
  updateOneEvent(data: EventUpdateInput!, where: EventWhereUniqueInput!): Event
  updateOneLocation(data: LocationUpdateInput!, where: LocationWhereUniqueInput!): Location
  updateOneStakeholder(data: StakeholderUpdateInput!, where: StakeholderWhereUniqueInput!): Stakeholder
  updateOneUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
}

input NestedDateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input NestedDateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime!]
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input NestedIntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

input NullableDateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input NullableIntFieldUpdateOperationsInput {
  decrement: Int
  divide: Int
  increment: Int
  multiply: Int
  set: Int
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}

type Query {
  briefingBook(where: BriefingBookWhereUniqueInput!): BriefingBook
  briefingBooks(after: BriefingBookWhereUniqueInput, before: BriefingBookWhereUniqueInput, first: Int, last: Int, orderBy: [BriefingBookOrderByInput!], where: BriefingBookWhereInput): [BriefingBook!]!
  document(where: DocumentWhereUniqueInput!): Document
  documents(after: DocumentWhereUniqueInput, before: DocumentWhereUniqueInput, first: Int, last: Int, orderBy: [DocumentOrderByInput!], where: DocumentWhereInput): [Document!]!
  documentsCount(where: DocumentWhereInput): Int
  event(where: EventWhereUniqueInput!): Event
  events(after: EventWhereUniqueInput, before: EventWhereUniqueInput, first: Int, last: Int, orderBy: [EventOrderByInput!], where: EventWhereInput): [Event!]!
  eventsCount(where: EventWhereInput): Int
  file(where: FileWhereUniqueInput!): File
  files(after: FileWhereUniqueInput, before: FileWhereUniqueInput, first: Int, last: Int, orderBy: [FileOrderByInput!], where: FileWhereInput): [File!]!
  kind(where: KindWhereUniqueInput!): Kind
  kindOnDocument(where: KindOnDocumentWhereUniqueInput!): KindOnDocument
  kindOnDocuments(after: KindOnDocumentWhereUniqueInput, before: KindOnDocumentWhereUniqueInput, first: Int, last: Int, orderBy: [KindOnDocumentOrderByInput!], where: KindOnDocumentWhereInput): [KindOnDocument!]!
  kinds(after: KindWhereUniqueInput, before: KindWhereUniqueInput, first: Int, last: Int, orderBy: [KindOrderByInput!], where: KindWhereInput): [Kind!]!
  location(where: LocationWhereUniqueInput!): Location
  locations(after: LocationWhereUniqueInput, before: LocationWhereUniqueInput, first: Int, last: Int, orderBy: [LocationOrderByInput!], where: LocationWhereInput): [Location!]!
  searchQuery(limit: Int, searchQuery: String!): SearchResult
  searchQueryDocumentsCount(searchQuery: String!): Int
  searchQueryEventsCount(searchQuery: String!): Int
  searchQueryStakeholdersCount(searchQuery: String!): Int
  stakeholder(where: StakeholderWhereUniqueInput!): Stakeholder
  stakeholders(after: StakeholderWhereUniqueInput, before: StakeholderWhereUniqueInput, first: Int, last: Int, orderBy: [StakeholderOrderByInput!], where: StakeholderWhereInput): [Stakeholder!]!
  stakeholdersCount(where: StakeholderWhereInput): Int
  tag(where: TagWhereUniqueInput!): Tag
  tags(after: TagWhereUniqueInput, before: TagWhereUniqueInput, first: Int, last: Int, orderBy: [TagOrderByInput!], where: TagWhereInput): [Tag!]!
  user(where: UserWhereUniqueInput!): User
  users(after: UserWhereUniqueInput, before: UserWhereUniqueInput, first: Int, last: Int, orderBy: [UserOrderByInput!], where: UserWhereInput): [User!]!
}

enum QueryMode {
  default
  insensitive
}

type SearchResult {
  documents: [Document!]!
  events: [Event!]!
  stakeholders: [Stakeholder!]!
}

enum SortOrder {
  asc
  desc
}

type Stakeholder {
  documents(after: DocumentAuthorWhereUniqueInput, before: DocumentAuthorWhereUniqueInput, first: Int, last: Int): [DocumentAuthor!]!
  documentsMentionedIn(after: DocumentInvolvedStakeholderWhereUniqueInput, before: DocumentInvolvedStakeholderWhereUniqueInput, first: Int, last: Int): [DocumentInvolvedStakeholder!]!
  eventsInvolvedIn(after: StakeholderEventWhereUniqueInput, before: StakeholderEventWhereUniqueInput, first: Int, last: Int): [StakeholderEvent!]!
  id: String!
  isStakeholderInstitution: Int!
  stakeholderDescription: String
  stakeholderFullName: String!
  stakeholderWikipediaUri: String
}

type StakeholderBriefingBook {
  BriefingBook: BriefingBook!
  BriefingBookId: String!
  id: String!
  Stakeholder: Stakeholder!
  StakeholderId: String!
}

input StakeholderBriefingBookCreateManyWithoutBriefingBookInput {
  connect: [StakeholderBriefingBookWhereUniqueInput!]
  connectOrCreate: [StakeholderBriefingBookCreateOrConnectWithoutBriefingBookInput!]
  create: [StakeholderBriefingBookCreateWithoutBriefingBookInput!]
}

input StakeholderBriefingBookCreateManyWithoutStakeholderInput {
  connect: [StakeholderBriefingBookWhereUniqueInput!]
  connectOrCreate: [StakeholderBriefingBookCreateOrConnectWithoutStakeholderInput!]
  create: [StakeholderBriefingBookCreateWithoutStakeholderInput!]
}

input StakeholderBriefingBookCreateOrConnectWithoutBriefingBookInput {
  create: StakeholderBriefingBookCreateWithoutBriefingBookInput!
  where: StakeholderBriefingBookWhereUniqueInput!
}

input StakeholderBriefingBookCreateOrConnectWithoutStakeholderInput {
  create: StakeholderBriefingBookCreateWithoutStakeholderInput!
  where: StakeholderBriefingBookWhereUniqueInput!
}

input StakeholderBriefingBookCreateWithoutBriefingBookInput {
  id: String
  Stakeholder: StakeholderCreateOneWithoutBriefingBooksMentionedInInput!
}

input StakeholderBriefingBookCreateWithoutStakeholderInput {
  BriefingBook: BriefingBookCreateOneWithoutMentionedStakeholdersInput!
  id: String
}

input StakeholderBriefingBookListRelationFilter {
  every: StakeholderBriefingBookWhereInput
  none: StakeholderBriefingBookWhereInput
  some: StakeholderBriefingBookWhereInput
}

input StakeholderBriefingBookScalarWhereInput {
  A: StringFilter
  AND: [StakeholderBriefingBookScalarWhereInput!]
  B: StringFilter
  id: StringFilter
  NOT: [StakeholderBriefingBookScalarWhereInput!]
  OR: [StakeholderBriefingBookScalarWhereInput!]
}

input StakeholderBriefingBookStakeholderBriefingBook_AB_uniqueCompoundUniqueInput {
  A: String!
  B: String!
}

input StakeholderBriefingBookUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
}

input StakeholderBriefingBookUpdateManyWithoutBriefingBookInput {
  connect: [StakeholderBriefingBookWhereUniqueInput!]
  connectOrCreate: [StakeholderBriefingBookCreateOrConnectWithoutBriefingBookInput!]
  create: [StakeholderBriefingBookCreateWithoutBriefingBookInput!]
  delete: [StakeholderBriefingBookWhereUniqueInput!]
  deleteMany: [StakeholderBriefingBookScalarWhereInput!]
  disconnect: [StakeholderBriefingBookWhereUniqueInput!]
  set: [StakeholderBriefingBookWhereUniqueInput!]
  update: [StakeholderBriefingBookUpdateWithWhereUniqueWithoutBriefingBookInput!]
  updateMany: [StakeholderBriefingBookUpdateManyWithWhereWithoutBriefingBookInput!]
  upsert: [StakeholderBriefingBookUpsertWithWhereUniqueWithoutBriefingBookInput!]
}

input StakeholderBriefingBookUpdateManyWithoutStakeholderInput {
  connect: [StakeholderBriefingBookWhereUniqueInput!]
  connectOrCreate: [StakeholderBriefingBookCreateOrConnectWithoutStakeholderInput!]
  create: [StakeholderBriefingBookCreateWithoutStakeholderInput!]
  delete: [StakeholderBriefingBookWhereUniqueInput!]
  deleteMany: [StakeholderBriefingBookScalarWhereInput!]
  disconnect: [StakeholderBriefingBookWhereUniqueInput!]
  set: [StakeholderBriefingBookWhereUniqueInput!]
  update: [StakeholderBriefingBookUpdateWithWhereUniqueWithoutStakeholderInput!]
  updateMany: [StakeholderBriefingBookUpdateManyWithWhereWithoutStakeholderInput!]
  upsert: [StakeholderBriefingBookUpsertWithWhereUniqueWithoutStakeholderInput!]
}

input StakeholderBriefingBookUpdateManyWithWhereWithoutBriefingBookInput {
  data: StakeholderBriefingBookUpdateManyMutationInput!
  where: StakeholderBriefingBookScalarWhereInput!
}

input StakeholderBriefingBookUpdateManyWithWhereWithoutStakeholderInput {
  data: StakeholderBriefingBookUpdateManyMutationInput!
  where: StakeholderBriefingBookScalarWhereInput!
}

input StakeholderBriefingBookUpdateWithoutBriefingBookInput {
  id: StringFieldUpdateOperationsInput
  Stakeholder: StakeholderUpdateOneRequiredWithoutBriefingBooksMentionedInInput
}

input StakeholderBriefingBookUpdateWithoutStakeholderInput {
  BriefingBook: BriefingBookUpdateOneRequiredWithoutMentionedStakeholdersInput
  id: StringFieldUpdateOperationsInput
}

input StakeholderBriefingBookUpdateWithWhereUniqueWithoutBriefingBookInput {
  data: StakeholderBriefingBookUpdateWithoutBriefingBookInput!
  where: StakeholderBriefingBookWhereUniqueInput!
}

input StakeholderBriefingBookUpdateWithWhereUniqueWithoutStakeholderInput {
  data: StakeholderBriefingBookUpdateWithoutStakeholderInput!
  where: StakeholderBriefingBookWhereUniqueInput!
}

input StakeholderBriefingBookUpsertWithWhereUniqueWithoutBriefingBookInput {
  create: StakeholderBriefingBookCreateWithoutBriefingBookInput!
  update: StakeholderBriefingBookUpdateWithoutBriefingBookInput!
  where: StakeholderBriefingBookWhereUniqueInput!
}

input StakeholderBriefingBookUpsertWithWhereUniqueWithoutStakeholderInput {
  create: StakeholderBriefingBookCreateWithoutStakeholderInput!
  update: StakeholderBriefingBookUpdateWithoutStakeholderInput!
  where: StakeholderBriefingBookWhereUniqueInput!
}

input StakeholderBriefingBookWhereInput {
  A: StringFilter
  AND: [StakeholderBriefingBookWhereInput!]
  B: StringFilter
  BriefingBook: BriefingBookWhereInput
  id: StringFilter
  NOT: [StakeholderBriefingBookWhereInput!]
  OR: [StakeholderBriefingBookWhereInput!]
  Stakeholder: StakeholderWhereInput
}

input StakeholderBriefingBookWhereUniqueInput {
  id: String
  StakeholderBriefingBook_AB_unique: StakeholderBriefingBookStakeholderBriefingBook_AB_uniqueCompoundUniqueInput
}

input StakeholderCreateInput {
  briefingBooksMentionedIn: StakeholderBriefingBookCreateManyWithoutStakeholderInput
  createdAt: DateTime
  documents: DocumentAuthorCreateManyWithoutStakeholderInput
  documentsMentionedIn: DocumentInvolvedStakeholderCreateManyWithoutStakeholderInput
  eventsInvolvedIn: StakeholderEventCreateManyWithoutStakeholderInput
  id: String
  isStakeholderInstitution: Int
  stakeholderDescription: String
  stakeholderFullName: String!
  stakeholderTsVector: String
  stakeholderWikipediaUri: String
  updatedAt: DateTime
}

input StakeholderCreateOneWithoutBriefingBooksMentionedInInput {
  connect: StakeholderWhereUniqueInput
  connectOrCreate: StakeholderCreateOrConnectWithoutbriefingBooksMentionedInInput
  create: StakeholderCreateWithoutBriefingBooksMentionedInInput
}

input StakeholderCreateOneWithoutDocumentsInput {
  connect: StakeholderWhereUniqueInput
  connectOrCreate: StakeholderCreateOrConnectWithoutdocumentsInput
  create: StakeholderCreateWithoutDocumentsInput
}

input StakeholderCreateOneWithoutDocumentsMentionedInInput {
  connect: StakeholderWhereUniqueInput
  connectOrCreate: StakeholderCreateOrConnectWithoutdocumentsMentionedInInput
  create: StakeholderCreateWithoutDocumentsMentionedInInput
}

input StakeholderCreateOneWithoutEventsInvolvedInInput {
  connect: StakeholderWhereUniqueInput
  connectOrCreate: StakeholderCreateOrConnectWithouteventsInvolvedInInput
  create: StakeholderCreateWithoutEventsInvolvedInInput
}

input StakeholderCreateOrConnectWithoutbriefingBooksMentionedInInput {
  create: StakeholderCreateWithoutBriefingBooksMentionedInInput!
  where: StakeholderWhereUniqueInput!
}

input StakeholderCreateOrConnectWithoutdocumentsInput {
  create: StakeholderCreateWithoutDocumentsInput!
  where: StakeholderWhereUniqueInput!
}

input StakeholderCreateOrConnectWithoutdocumentsMentionedInInput {
  create: StakeholderCreateWithoutDocumentsMentionedInInput!
  where: StakeholderWhereUniqueInput!
}

input StakeholderCreateOrConnectWithouteventsInvolvedInInput {
  create: StakeholderCreateWithoutEventsInvolvedInInput!
  where: StakeholderWhereUniqueInput!
}

input StakeholderCreateWithoutBriefingBooksMentionedInInput {
  createdAt: DateTime
  documents: DocumentAuthorCreateManyWithoutStakeholderInput
  documentsMentionedIn: DocumentInvolvedStakeholderCreateManyWithoutStakeholderInput
  eventsInvolvedIn: StakeholderEventCreateManyWithoutStakeholderInput
  id: String
  isStakeholderInstitution: Int
  stakeholderDescription: String
  stakeholderFullName: String!
  stakeholderTsVector: String
  stakeholderWikipediaUri: String
  updatedAt: DateTime
}

input StakeholderCreateWithoutDocumentsInput {
  briefingBooksMentionedIn: StakeholderBriefingBookCreateManyWithoutStakeholderInput
  createdAt: DateTime
  documentsMentionedIn: DocumentInvolvedStakeholderCreateManyWithoutStakeholderInput
  eventsInvolvedIn: StakeholderEventCreateManyWithoutStakeholderInput
  id: String
  isStakeholderInstitution: Int
  stakeholderDescription: String
  stakeholderFullName: String!
  stakeholderTsVector: String
  stakeholderWikipediaUri: String
  updatedAt: DateTime
}

input StakeholderCreateWithoutDocumentsMentionedInInput {
  briefingBooksMentionedIn: StakeholderBriefingBookCreateManyWithoutStakeholderInput
  createdAt: DateTime
  documents: DocumentAuthorCreateManyWithoutStakeholderInput
  eventsInvolvedIn: StakeholderEventCreateManyWithoutStakeholderInput
  id: String
  isStakeholderInstitution: Int
  stakeholderDescription: String
  stakeholderFullName: String!
  stakeholderTsVector: String
  stakeholderWikipediaUri: String
  updatedAt: DateTime
}

input StakeholderCreateWithoutEventsInvolvedInInput {
  briefingBooksMentionedIn: StakeholderBriefingBookCreateManyWithoutStakeholderInput
  createdAt: DateTime
  documents: DocumentAuthorCreateManyWithoutStakeholderInput
  documentsMentionedIn: DocumentInvolvedStakeholderCreateManyWithoutStakeholderInput
  id: String
  isStakeholderInstitution: Int
  stakeholderDescription: String
  stakeholderFullName: String!
  stakeholderTsVector: String
  stakeholderWikipediaUri: String
  updatedAt: DateTime
}

type StakeholderEvent {
  Event: Event!
  EventId: String!
  id: String!
  Stakeholder: Stakeholder!
  StakeholderId: String!
}

input StakeholderEventCreateInput {
  Event: EventCreateOneWithoutEventStakeholdersInput!
  id: String
  Stakeholder: StakeholderCreateOneWithoutEventsInvolvedInInput!
}

input StakeholderEventCreateManyWithoutEventInput {
  connect: [StakeholderEventWhereUniqueInput!]
  connectOrCreate: [StakeholderEventCreateOrConnectWithoutEventInput!]
  create: [StakeholderEventCreateWithoutEventInput!]
}

input StakeholderEventCreateManyWithoutStakeholderInput {
  connect: [StakeholderEventWhereUniqueInput!]
  connectOrCreate: [StakeholderEventCreateOrConnectWithoutStakeholderInput!]
  create: [StakeholderEventCreateWithoutStakeholderInput!]
}

input StakeholderEventCreateOrConnectWithoutEventInput {
  create: StakeholderEventCreateWithoutEventInput!
  where: StakeholderEventWhereUniqueInput!
}

input StakeholderEventCreateOrConnectWithoutStakeholderInput {
  create: StakeholderEventCreateWithoutStakeholderInput!
  where: StakeholderEventWhereUniqueInput!
}

input StakeholderEventCreateWithoutEventInput {
  id: String
  Stakeholder: StakeholderCreateOneWithoutEventsInvolvedInInput!
}

input StakeholderEventCreateWithoutStakeholderInput {
  Event: EventCreateOneWithoutEventStakeholdersInput!
  id: String
}

input StakeholderEventListRelationFilter {
  every: StakeholderEventWhereInput
  none: StakeholderEventWhereInput
  some: StakeholderEventWhereInput
}

input StakeholderEventScalarWhereInput {
  A: StringFilter
  AND: [StakeholderEventScalarWhereInput!]
  B: StringFilter
  id: StringFilter
  NOT: [StakeholderEventScalarWhereInput!]
  OR: [StakeholderEventScalarWhereInput!]
}

input StakeholderEventStakeholderEvent_AB_uniqueCompoundUniqueInput {
  A: String!
  B: String!
}

input StakeholderEventUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
}

input StakeholderEventUpdateManyWithoutEventInput {
  connect: [StakeholderEventWhereUniqueInput!]
  connectOrCreate: [StakeholderEventCreateOrConnectWithoutEventInput!]
  create: [StakeholderEventCreateWithoutEventInput!]
  delete: [StakeholderEventWhereUniqueInput!]
  deleteMany: [StakeholderEventScalarWhereInput!]
  disconnect: [StakeholderEventWhereUniqueInput!]
  set: [StakeholderEventWhereUniqueInput!]
  update: [StakeholderEventUpdateWithWhereUniqueWithoutEventInput!]
  updateMany: [StakeholderEventUpdateManyWithWhereWithoutEventInput!]
  upsert: [StakeholderEventUpsertWithWhereUniqueWithoutEventInput!]
}

input StakeholderEventUpdateManyWithoutStakeholderInput {
  connect: [StakeholderEventWhereUniqueInput!]
  connectOrCreate: [StakeholderEventCreateOrConnectWithoutStakeholderInput!]
  create: [StakeholderEventCreateWithoutStakeholderInput!]
  delete: [StakeholderEventWhereUniqueInput!]
  deleteMany: [StakeholderEventScalarWhereInput!]
  disconnect: [StakeholderEventWhereUniqueInput!]
  set: [StakeholderEventWhereUniqueInput!]
  update: [StakeholderEventUpdateWithWhereUniqueWithoutStakeholderInput!]
  updateMany: [StakeholderEventUpdateManyWithWhereWithoutStakeholderInput!]
  upsert: [StakeholderEventUpsertWithWhereUniqueWithoutStakeholderInput!]
}

input StakeholderEventUpdateManyWithWhereWithoutEventInput {
  data: StakeholderEventUpdateManyMutationInput!
  where: StakeholderEventScalarWhereInput!
}

input StakeholderEventUpdateManyWithWhereWithoutStakeholderInput {
  data: StakeholderEventUpdateManyMutationInput!
  where: StakeholderEventScalarWhereInput!
}

input StakeholderEventUpdateWithoutEventInput {
  id: StringFieldUpdateOperationsInput
  Stakeholder: StakeholderUpdateOneRequiredWithoutEventsInvolvedInInput
}

input StakeholderEventUpdateWithoutStakeholderInput {
  Event: EventUpdateOneRequiredWithoutEventStakeholdersInput
  id: StringFieldUpdateOperationsInput
}

input StakeholderEventUpdateWithWhereUniqueWithoutEventInput {
  data: StakeholderEventUpdateWithoutEventInput!
  where: StakeholderEventWhereUniqueInput!
}

input StakeholderEventUpdateWithWhereUniqueWithoutStakeholderInput {
  data: StakeholderEventUpdateWithoutStakeholderInput!
  where: StakeholderEventWhereUniqueInput!
}

input StakeholderEventUpsertWithWhereUniqueWithoutEventInput {
  create: StakeholderEventCreateWithoutEventInput!
  update: StakeholderEventUpdateWithoutEventInput!
  where: StakeholderEventWhereUniqueInput!
}

input StakeholderEventUpsertWithWhereUniqueWithoutStakeholderInput {
  create: StakeholderEventCreateWithoutStakeholderInput!
  update: StakeholderEventUpdateWithoutStakeholderInput!
  where: StakeholderEventWhereUniqueInput!
}

input StakeholderEventWhereInput {
  A: StringFilter
  AND: [StakeholderEventWhereInput!]
  B: StringFilter
  Event: EventWhereInput
  id: StringFilter
  NOT: [StakeholderEventWhereInput!]
  OR: [StakeholderEventWhereInput!]
  Stakeholder: StakeholderWhereInput
}

input StakeholderEventWhereUniqueInput {
  id: String
  StakeholderEvent_AB_unique: StakeholderEventStakeholderEvent_AB_uniqueCompoundUniqueInput
}

input StakeholderOrderByInput {
  createdAt: SortOrder
  id: SortOrder
  isStakeholderInstitution: SortOrder
  stakeholderDescription: SortOrder
  stakeholderFullName: SortOrder
  stakeholderTsVector: SortOrder
  stakeholderWikipediaUri: SortOrder
  updatedAt: SortOrder
}

input StakeholderUpdateInput {
  briefingBooksMentionedIn: StakeholderBriefingBookUpdateManyWithoutStakeholderInput
  createdAt: DateTimeFieldUpdateOperationsInput
  documents: DocumentAuthorUpdateManyWithoutStakeholderInput
  documentsMentionedIn: DocumentInvolvedStakeholderUpdateManyWithoutStakeholderInput
  eventsInvolvedIn: StakeholderEventUpdateManyWithoutStakeholderInput
  id: StringFieldUpdateOperationsInput
  isStakeholderInstitution: IntFieldUpdateOperationsInput
  stakeholderDescription: NullableStringFieldUpdateOperationsInput
  stakeholderFullName: StringFieldUpdateOperationsInput
  stakeholderTsVector: NullableStringFieldUpdateOperationsInput
  stakeholderWikipediaUri: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input StakeholderUpdateOneRequiredWithoutBriefingBooksMentionedInInput {
  connect: StakeholderWhereUniqueInput
  connectOrCreate: StakeholderCreateOrConnectWithoutbriefingBooksMentionedInInput
  create: StakeholderCreateWithoutBriefingBooksMentionedInInput
  update: StakeholderUpdateWithoutBriefingBooksMentionedInInput
  upsert: StakeholderUpsertWithoutBriefingBooksMentionedInInput
}

input StakeholderUpdateOneRequiredWithoutDocumentsInput {
  connect: StakeholderWhereUniqueInput
  connectOrCreate: StakeholderCreateOrConnectWithoutdocumentsInput
  create: StakeholderCreateWithoutDocumentsInput
  update: StakeholderUpdateWithoutDocumentsInput
  upsert: StakeholderUpsertWithoutDocumentsInput
}

input StakeholderUpdateOneRequiredWithoutDocumentsMentionedInInput {
  connect: StakeholderWhereUniqueInput
  connectOrCreate: StakeholderCreateOrConnectWithoutdocumentsMentionedInInput
  create: StakeholderCreateWithoutDocumentsMentionedInInput
  update: StakeholderUpdateWithoutDocumentsMentionedInInput
  upsert: StakeholderUpsertWithoutDocumentsMentionedInInput
}

input StakeholderUpdateOneRequiredWithoutEventsInvolvedInInput {
  connect: StakeholderWhereUniqueInput
  connectOrCreate: StakeholderCreateOrConnectWithouteventsInvolvedInInput
  create: StakeholderCreateWithoutEventsInvolvedInInput
  update: StakeholderUpdateWithoutEventsInvolvedInInput
  upsert: StakeholderUpsertWithoutEventsInvolvedInInput
}

input StakeholderUpdateWithoutBriefingBooksMentionedInInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  documents: DocumentAuthorUpdateManyWithoutStakeholderInput
  documentsMentionedIn: DocumentInvolvedStakeholderUpdateManyWithoutStakeholderInput
  eventsInvolvedIn: StakeholderEventUpdateManyWithoutStakeholderInput
  id: StringFieldUpdateOperationsInput
  isStakeholderInstitution: IntFieldUpdateOperationsInput
  stakeholderDescription: NullableStringFieldUpdateOperationsInput
  stakeholderFullName: StringFieldUpdateOperationsInput
  stakeholderTsVector: NullableStringFieldUpdateOperationsInput
  stakeholderWikipediaUri: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input StakeholderUpdateWithoutDocumentsInput {
  briefingBooksMentionedIn: StakeholderBriefingBookUpdateManyWithoutStakeholderInput
  createdAt: DateTimeFieldUpdateOperationsInput
  documentsMentionedIn: DocumentInvolvedStakeholderUpdateManyWithoutStakeholderInput
  eventsInvolvedIn: StakeholderEventUpdateManyWithoutStakeholderInput
  id: StringFieldUpdateOperationsInput
  isStakeholderInstitution: IntFieldUpdateOperationsInput
  stakeholderDescription: NullableStringFieldUpdateOperationsInput
  stakeholderFullName: StringFieldUpdateOperationsInput
  stakeholderTsVector: NullableStringFieldUpdateOperationsInput
  stakeholderWikipediaUri: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input StakeholderUpdateWithoutDocumentsMentionedInInput {
  briefingBooksMentionedIn: StakeholderBriefingBookUpdateManyWithoutStakeholderInput
  createdAt: DateTimeFieldUpdateOperationsInput
  documents: DocumentAuthorUpdateManyWithoutStakeholderInput
  eventsInvolvedIn: StakeholderEventUpdateManyWithoutStakeholderInput
  id: StringFieldUpdateOperationsInput
  isStakeholderInstitution: IntFieldUpdateOperationsInput
  stakeholderDescription: NullableStringFieldUpdateOperationsInput
  stakeholderFullName: StringFieldUpdateOperationsInput
  stakeholderTsVector: NullableStringFieldUpdateOperationsInput
  stakeholderWikipediaUri: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input StakeholderUpdateWithoutEventsInvolvedInInput {
  briefingBooksMentionedIn: StakeholderBriefingBookUpdateManyWithoutStakeholderInput
  createdAt: DateTimeFieldUpdateOperationsInput
  documents: DocumentAuthorUpdateManyWithoutStakeholderInput
  documentsMentionedIn: DocumentInvolvedStakeholderUpdateManyWithoutStakeholderInput
  id: StringFieldUpdateOperationsInput
  isStakeholderInstitution: IntFieldUpdateOperationsInput
  stakeholderDescription: NullableStringFieldUpdateOperationsInput
  stakeholderFullName: StringFieldUpdateOperationsInput
  stakeholderTsVector: NullableStringFieldUpdateOperationsInput
  stakeholderWikipediaUri: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input StakeholderUpsertWithoutBriefingBooksMentionedInInput {
  create: StakeholderCreateWithoutBriefingBooksMentionedInInput!
  update: StakeholderUpdateWithoutBriefingBooksMentionedInInput!
}

input StakeholderUpsertWithoutDocumentsInput {
  create: StakeholderCreateWithoutDocumentsInput!
  update: StakeholderUpdateWithoutDocumentsInput!
}

input StakeholderUpsertWithoutDocumentsMentionedInInput {
  create: StakeholderCreateWithoutDocumentsMentionedInInput!
  update: StakeholderUpdateWithoutDocumentsMentionedInInput!
}

input StakeholderUpsertWithoutEventsInvolvedInInput {
  create: StakeholderCreateWithoutEventsInvolvedInInput!
  update: StakeholderUpdateWithoutEventsInvolvedInInput!
}

input StakeholderWhereInput {
  AND: [StakeholderWhereInput!]
  briefingBooksMentionedIn: StakeholderBriefingBookListRelationFilter
  createdAt: DateTimeFilter
  documents: DocumentAuthorListRelationFilter
  documentsMentionedIn: DocumentInvolvedStakeholderListRelationFilter
  eventsInvolvedIn: StakeholderEventListRelationFilter
  id: StringFilter
  isStakeholderInstitution: IntFilter
  NOT: [StakeholderWhereInput!]
  OR: [StakeholderWhereInput!]
  stakeholderDescription: StringNullableFilter
  stakeholderFullName: StringFilter
  stakeholderTsVector: StringNullableFilter
  stakeholderWikipediaUri: StringNullableFilter
  updatedAt: DateTimeFilter
}

input StakeholderWhereUniqueInput {
  id: String
  stakeholderFullName: String
}

input StringFieldUpdateOperationsInput {
  set: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

type Tag {
  createdAt: DateTime!
  description: String
  documentsWithTag(after: TagOnDocumentWhereUniqueInput, before: TagOnDocumentWhereUniqueInput, first: Int, last: Int): [TagOnDocument!]!
  eventsWithTag(after: TagOnEventWhereUniqueInput, before: TagOnEventWhereUniqueInput, first: Int, last: Int): [TagOnEvent!]!
  id: String!
  name: String!
  tagWikipediaUri: String
  type: String
  updatedAt: DateTime!
}

input TagCreateInput {
  createdAt: DateTime
  description: String
  documentsWithTag: TagOnDocumentCreateManyWithoutTagInput
  eventsWithTag: TagOnEventCreateManyWithoutTagInput
  id: String
  name: String!
  tagWikipediaUri: String
  type: String
  updatedAt: DateTime
}

input TagCreateOneWithoutDocumentsWithTagInput {
  connect: TagWhereUniqueInput
  connectOrCreate: TagCreateOrConnectWithoutdocumentsWithTagInput
  create: TagCreateWithoutDocumentsWithTagInput
}

input TagCreateOneWithoutEventsWithTagInput {
  connect: TagWhereUniqueInput
  connectOrCreate: TagCreateOrConnectWithouteventsWithTagInput
  create: TagCreateWithoutEventsWithTagInput
}

input TagCreateOrConnectWithoutdocumentsWithTagInput {
  create: TagCreateWithoutDocumentsWithTagInput!
  where: TagWhereUniqueInput!
}

input TagCreateOrConnectWithouteventsWithTagInput {
  create: TagCreateWithoutEventsWithTagInput!
  where: TagWhereUniqueInput!
}

input TagCreateWithoutDocumentsWithTagInput {
  createdAt: DateTime
  description: String
  eventsWithTag: TagOnEventCreateManyWithoutTagInput
  id: String
  name: String!
  tagWikipediaUri: String
  type: String
  updatedAt: DateTime
}

input TagCreateWithoutEventsWithTagInput {
  createdAt: DateTime
  description: String
  documentsWithTag: TagOnDocumentCreateManyWithoutTagInput
  id: String
  name: String!
  tagWikipediaUri: String
  type: String
  updatedAt: DateTime
}

type TagOnDocument {
  Document: Document!
  DocumentId: String!
  id: String!
  Tag: Tag!
  TagId: String!
}

input TagOnDocumentCreateInput {
  Document: DocumentCreateOneWithoutDocumentTagsInput!
  id: String
  Tag: TagCreateOneWithoutDocumentsWithTagInput!
}

input TagOnDocumentCreateManyWithoutDocumentInput {
  connect: [TagOnDocumentWhereUniqueInput!]
  connectOrCreate: [TagOnDocumentCreateOrConnectWithoutDocumentInput!]
  create: [TagOnDocumentCreateWithoutDocumentInput!]
}

input TagOnDocumentCreateManyWithoutTagInput {
  connect: [TagOnDocumentWhereUniqueInput!]
  connectOrCreate: [TagOnDocumentCreateOrConnectWithoutTagInput!]
  create: [TagOnDocumentCreateWithoutTagInput!]
}

input TagOnDocumentCreateOrConnectWithoutDocumentInput {
  create: TagOnDocumentCreateWithoutDocumentInput!
  where: TagOnDocumentWhereUniqueInput!
}

input TagOnDocumentCreateOrConnectWithoutTagInput {
  create: TagOnDocumentCreateWithoutTagInput!
  where: TagOnDocumentWhereUniqueInput!
}

input TagOnDocumentCreateWithoutDocumentInput {
  id: String
  Tag: TagCreateOneWithoutDocumentsWithTagInput!
}

input TagOnDocumentCreateWithoutTagInput {
  Document: DocumentCreateOneWithoutDocumentTagsInput!
  id: String
}

input TagOnDocumentListRelationFilter {
  every: TagOnDocumentWhereInput
  none: TagOnDocumentWhereInput
  some: TagOnDocumentWhereInput
}

input TagOnDocumentScalarWhereInput {
  A: StringFilter
  AND: [TagOnDocumentScalarWhereInput!]
  B: StringFilter
  id: StringFilter
  NOT: [TagOnDocumentScalarWhereInput!]
  OR: [TagOnDocumentScalarWhereInput!]
}

input TagOnDocumentTagOnDocument_AB_uniqueCompoundUniqueInput {
  A: String!
  B: String!
}

input TagOnDocumentUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
}

input TagOnDocumentUpdateManyWithoutDocumentInput {
  connect: [TagOnDocumentWhereUniqueInput!]
  connectOrCreate: [TagOnDocumentCreateOrConnectWithoutDocumentInput!]
  create: [TagOnDocumentCreateWithoutDocumentInput!]
  delete: [TagOnDocumentWhereUniqueInput!]
  deleteMany: [TagOnDocumentScalarWhereInput!]
  disconnect: [TagOnDocumentWhereUniqueInput!]
  set: [TagOnDocumentWhereUniqueInput!]
  update: [TagOnDocumentUpdateWithWhereUniqueWithoutDocumentInput!]
  updateMany: [TagOnDocumentUpdateManyWithWhereWithoutDocumentInput!]
  upsert: [TagOnDocumentUpsertWithWhereUniqueWithoutDocumentInput!]
}

input TagOnDocumentUpdateManyWithoutTagInput {
  connect: [TagOnDocumentWhereUniqueInput!]
  connectOrCreate: [TagOnDocumentCreateOrConnectWithoutTagInput!]
  create: [TagOnDocumentCreateWithoutTagInput!]
  delete: [TagOnDocumentWhereUniqueInput!]
  deleteMany: [TagOnDocumentScalarWhereInput!]
  disconnect: [TagOnDocumentWhereUniqueInput!]
  set: [TagOnDocumentWhereUniqueInput!]
  update: [TagOnDocumentUpdateWithWhereUniqueWithoutTagInput!]
  updateMany: [TagOnDocumentUpdateManyWithWhereWithoutTagInput!]
  upsert: [TagOnDocumentUpsertWithWhereUniqueWithoutTagInput!]
}

input TagOnDocumentUpdateManyWithWhereWithoutDocumentInput {
  data: TagOnDocumentUpdateManyMutationInput!
  where: TagOnDocumentScalarWhereInput!
}

input TagOnDocumentUpdateManyWithWhereWithoutTagInput {
  data: TagOnDocumentUpdateManyMutationInput!
  where: TagOnDocumentScalarWhereInput!
}

input TagOnDocumentUpdateWithoutDocumentInput {
  id: StringFieldUpdateOperationsInput
  Tag: TagUpdateOneRequiredWithoutDocumentsWithTagInput
}

input TagOnDocumentUpdateWithoutTagInput {
  Document: DocumentUpdateOneRequiredWithoutDocumentTagsInput
  id: StringFieldUpdateOperationsInput
}

input TagOnDocumentUpdateWithWhereUniqueWithoutDocumentInput {
  data: TagOnDocumentUpdateWithoutDocumentInput!
  where: TagOnDocumentWhereUniqueInput!
}

input TagOnDocumentUpdateWithWhereUniqueWithoutTagInput {
  data: TagOnDocumentUpdateWithoutTagInput!
  where: TagOnDocumentWhereUniqueInput!
}

input TagOnDocumentUpsertWithWhereUniqueWithoutDocumentInput {
  create: TagOnDocumentCreateWithoutDocumentInput!
  update: TagOnDocumentUpdateWithoutDocumentInput!
  where: TagOnDocumentWhereUniqueInput!
}

input TagOnDocumentUpsertWithWhereUniqueWithoutTagInput {
  create: TagOnDocumentCreateWithoutTagInput!
  update: TagOnDocumentUpdateWithoutTagInput!
  where: TagOnDocumentWhereUniqueInput!
}

input TagOnDocumentWhereInput {
  A: StringFilter
  AND: [TagOnDocumentWhereInput!]
  B: StringFilter
  Document: DocumentWhereInput
  id: StringFilter
  NOT: [TagOnDocumentWhereInput!]
  OR: [TagOnDocumentWhereInput!]
  Tag: TagWhereInput
}

input TagOnDocumentWhereUniqueInput {
  id: String
  TagOnDocument_AB_unique: TagOnDocumentTagOnDocument_AB_uniqueCompoundUniqueInput
}

type TagOnEvent {
  Event: Event!
  EventId: String!
  id: String!
  Tag: Tag!
  TagId: String!
}

input TagOnEventCreateInput {
  Event: EventCreateOneWithoutEventTagsInput!
  id: String
  Tag: TagCreateOneWithoutEventsWithTagInput!
}

input TagOnEventCreateManyWithoutEventInput {
  connect: [TagOnEventWhereUniqueInput!]
  connectOrCreate: [TagOnEventCreateOrConnectWithoutEventInput!]
  create: [TagOnEventCreateWithoutEventInput!]
}

input TagOnEventCreateManyWithoutTagInput {
  connect: [TagOnEventWhereUniqueInput!]
  connectOrCreate: [TagOnEventCreateOrConnectWithoutTagInput!]
  create: [TagOnEventCreateWithoutTagInput!]
}

input TagOnEventCreateOrConnectWithoutEventInput {
  create: TagOnEventCreateWithoutEventInput!
  where: TagOnEventWhereUniqueInput!
}

input TagOnEventCreateOrConnectWithoutTagInput {
  create: TagOnEventCreateWithoutTagInput!
  where: TagOnEventWhereUniqueInput!
}

input TagOnEventCreateWithoutEventInput {
  id: String
  Tag: TagCreateOneWithoutEventsWithTagInput!
}

input TagOnEventCreateWithoutTagInput {
  Event: EventCreateOneWithoutEventTagsInput!
  id: String
}

input TagOnEventListRelationFilter {
  every: TagOnEventWhereInput
  none: TagOnEventWhereInput
  some: TagOnEventWhereInput
}

input TagOnEventScalarWhereInput {
  A: StringFilter
  AND: [TagOnEventScalarWhereInput!]
  B: StringFilter
  id: StringFilter
  NOT: [TagOnEventScalarWhereInput!]
  OR: [TagOnEventScalarWhereInput!]
}

input TagOnEventTagOnEvent_AB_uniqueCompoundUniqueInput {
  A: String!
  B: String!
}

input TagOnEventUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
}

input TagOnEventUpdateManyWithoutEventInput {
  connect: [TagOnEventWhereUniqueInput!]
  connectOrCreate: [TagOnEventCreateOrConnectWithoutEventInput!]
  create: [TagOnEventCreateWithoutEventInput!]
  delete: [TagOnEventWhereUniqueInput!]
  deleteMany: [TagOnEventScalarWhereInput!]
  disconnect: [TagOnEventWhereUniqueInput!]
  set: [TagOnEventWhereUniqueInput!]
  update: [TagOnEventUpdateWithWhereUniqueWithoutEventInput!]
  updateMany: [TagOnEventUpdateManyWithWhereWithoutEventInput!]
  upsert: [TagOnEventUpsertWithWhereUniqueWithoutEventInput!]
}

input TagOnEventUpdateManyWithoutTagInput {
  connect: [TagOnEventWhereUniqueInput!]
  connectOrCreate: [TagOnEventCreateOrConnectWithoutTagInput!]
  create: [TagOnEventCreateWithoutTagInput!]
  delete: [TagOnEventWhereUniqueInput!]
  deleteMany: [TagOnEventScalarWhereInput!]
  disconnect: [TagOnEventWhereUniqueInput!]
  set: [TagOnEventWhereUniqueInput!]
  update: [TagOnEventUpdateWithWhereUniqueWithoutTagInput!]
  updateMany: [TagOnEventUpdateManyWithWhereWithoutTagInput!]
  upsert: [TagOnEventUpsertWithWhereUniqueWithoutTagInput!]
}

input TagOnEventUpdateManyWithWhereWithoutEventInput {
  data: TagOnEventUpdateManyMutationInput!
  where: TagOnEventScalarWhereInput!
}

input TagOnEventUpdateManyWithWhereWithoutTagInput {
  data: TagOnEventUpdateManyMutationInput!
  where: TagOnEventScalarWhereInput!
}

input TagOnEventUpdateWithoutEventInput {
  id: StringFieldUpdateOperationsInput
  Tag: TagUpdateOneRequiredWithoutEventsWithTagInput
}

input TagOnEventUpdateWithoutTagInput {
  Event: EventUpdateOneRequiredWithoutEventTagsInput
  id: StringFieldUpdateOperationsInput
}

input TagOnEventUpdateWithWhereUniqueWithoutEventInput {
  data: TagOnEventUpdateWithoutEventInput!
  where: TagOnEventWhereUniqueInput!
}

input TagOnEventUpdateWithWhereUniqueWithoutTagInput {
  data: TagOnEventUpdateWithoutTagInput!
  where: TagOnEventWhereUniqueInput!
}

input TagOnEventUpsertWithWhereUniqueWithoutEventInput {
  create: TagOnEventCreateWithoutEventInput!
  update: TagOnEventUpdateWithoutEventInput!
  where: TagOnEventWhereUniqueInput!
}

input TagOnEventUpsertWithWhereUniqueWithoutTagInput {
  create: TagOnEventCreateWithoutTagInput!
  update: TagOnEventUpdateWithoutTagInput!
  where: TagOnEventWhereUniqueInput!
}

input TagOnEventWhereInput {
  A: StringFilter
  AND: [TagOnEventWhereInput!]
  B: StringFilter
  Event: EventWhereInput
  id: StringFilter
  NOT: [TagOnEventWhereInput!]
  OR: [TagOnEventWhereInput!]
  Tag: TagWhereInput
}

input TagOnEventWhereUniqueInput {
  id: String
  TagOnEvent_AB_unique: TagOnEventTagOnEvent_AB_uniqueCompoundUniqueInput
}

input TagOrderByInput {
  createdAt: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
  tagWikipediaUri: SortOrder
  type: SortOrder
  updatedAt: SortOrder
}

input TagUpdateOneRequiredWithoutDocumentsWithTagInput {
  connect: TagWhereUniqueInput
  connectOrCreate: TagCreateOrConnectWithoutdocumentsWithTagInput
  create: TagCreateWithoutDocumentsWithTagInput
  update: TagUpdateWithoutDocumentsWithTagInput
  upsert: TagUpsertWithoutDocumentsWithTagInput
}

input TagUpdateOneRequiredWithoutEventsWithTagInput {
  connect: TagWhereUniqueInput
  connectOrCreate: TagCreateOrConnectWithouteventsWithTagInput
  create: TagCreateWithoutEventsWithTagInput
  update: TagUpdateWithoutEventsWithTagInput
  upsert: TagUpsertWithoutEventsWithTagInput
}

input TagUpdateWithoutDocumentsWithTagInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  eventsWithTag: TagOnEventUpdateManyWithoutTagInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  tagWikipediaUri: NullableStringFieldUpdateOperationsInput
  type: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input TagUpdateWithoutEventsWithTagInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  documentsWithTag: TagOnDocumentUpdateManyWithoutTagInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  tagWikipediaUri: NullableStringFieldUpdateOperationsInput
  type: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input TagUpsertWithoutDocumentsWithTagInput {
  create: TagCreateWithoutDocumentsWithTagInput!
  update: TagUpdateWithoutDocumentsWithTagInput!
}

input TagUpsertWithoutEventsWithTagInput {
  create: TagCreateWithoutEventsWithTagInput!
  update: TagUpdateWithoutEventsWithTagInput!
}

input TagWhereInput {
  AND: [TagWhereInput!]
  createdAt: DateTimeFilter
  description: StringNullableFilter
  documentsWithTag: TagOnDocumentListRelationFilter
  eventsWithTag: TagOnEventListRelationFilter
  id: StringFilter
  name: StringFilter
  NOT: [TagWhereInput!]
  OR: [TagWhereInput!]
  tagWikipediaUri: StringNullableFilter
  type: StringNullableFilter
  updatedAt: DateTimeFilter
}

input TagWhereUniqueInput {
  id: String
  name: String
  tagWikipediaUri: String
}

type User {
  createdAt: DateTime!
  email: String
  firstName: String
  id: String!
  lastName: String
  password: String
  role: String
  updatedAt: DateTime!
  userName: String!
}

type UserAuthPayload {
  token: String
  user: User
}

input UserOrderByInput {
  createdAt: SortOrder
  email: SortOrder
  firstName: SortOrder
  id: SortOrder
  lastName: SortOrder
  password: SortOrder
  role: SortOrder
  updatedAt: SortOrder
  userName: SortOrder
}

enum UserRole {
  Admin
  Editor
  Viewer
}

input UserUpdateInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  firstName: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  lastName: NullableStringFieldUpdateOperationsInput
  password: NullableStringFieldUpdateOperationsInput
  role: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  userName: StringFieldUpdateOperationsInput
}

input UserWhereInput {
  AND: [UserWhereInput!]
  createdAt: DateTimeFilter
  email: StringNullableFilter
  firstName: StringNullableFilter
  id: StringFilter
  lastName: StringNullableFilter
  NOT: [UserWhereInput!]
  OR: [UserWhereInput!]
  password: StringNullableFilter
  role: StringNullableFilter
  updatedAt: DateTimeFilter
  userName: StringFilter
}

input UserWhereUniqueInput {
  email: String
  id: String
  userName: String
}
